
========================================================================
disasm
========================================================================

------------------------------------------------------------------------
Region: PM_REGION
------------------------------------------------------------------------

 <$reset>
0x000000        03000000                 Null = Null + Null;
0x000001        DDF0003B                 jump $pre_main;

 <$interrupt.handler>
0x000002        F100001C                 pushm <r0, r1, r2>;
0x000003        0920FE4D                 r0 = Null + M[0xfffe4d];
0x000004        F3200000                 push r0;
0x000005        1900FE4D                 M[0xfffe4d] = Null + Null;
0x000006        0920FE93                 r0 = Null + M[0xfffe93];
0x000007        F3200000                 push r0;
0x000008        1900FE93                 M[0xfffe93] = Null + Null;
0x000009        0920FE71                 r0 = Null + M[0xfffe71];
0x00000A        1920000C                 M[$interrupt.start_time] = r0 + Null;
0x00000B        81EEFFBF                 rFlags = rFlags AND 0xffbf;
0x00000C        1900FE12                 M[0xfffe12] = Null + Null;
0x00000D        0930FE19                 r1 = Null + M[0xfffe19];
0x00000E        0940FE44                 r2 = Null + M[0xfffe44];
0x00000F        F1007FF8                 pushm <r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, rLink, rFlags>;
0x000010        F101FFFF                 pushm <I0, I1, I2, I3, I4, I5, I6, I7, M0, M1, M2, M3, L0, L1, L4, L5>;
0x000011        F1023FFF                 pushm <rMAC2, rMAC1, rMAC0, DoLoopStart, DoLoopEnd, DivResult, DivRemainder, rMACB2, rMACB1, rMACB0, B0, B1, B4, B5>;
0x000012        1900FE17                 M[0xfffe17] = Null + Null;
0x000013        51C00000                 L0 = Null + 0;
0x000014        51D00000                 L1 = Null + 0;
0x000015        51E00000                 L4 = Null + 0;
0x000016        51F00000                 L5 = Null + 0;
0x000017        F3000000                 push Null;
0x000018        F1DAFFFF                 B5 = M[SP + -0x1];
0x000019        F1CAFFFF                 B4 = M[SP + -0x1];
0x00001A        F1BAFFFF                 B1 = M[SP + -0x1];
0x00001B        F3A60000                 pop B0;
0x00001C        0920FE18                 r0 = Null + M[0xfffe18];
0x00001D        D15205A0                 r3 = M[r0 + 1440];
0x00001E        01E00080                 rFlags = Null + 128;
0x00001F        E420002F                 r0 = Null + 1;
0x000020        FD0000FF 090035DC        Null = Null + M[$interrupt.block_count];
0x000022        00200001                 if NE r0 = Null + Null;
0x000023        1920FE12                 M[0xfffe12] = r0 + Null;
0x000024        E005000F                 call r3;
0x000025        01E00000                 rFlags = Null + 0;
0x000026        F1063FFF                 popm <rMAC2, rMAC12, rMAC0, DoLoopStart, DoLoopEnd, DivResult, DivRemainder, rMACB2, rMACB12, rMACB0, B0, B1, B4, B5>;
0x000027        F105FFFF                 popm <I0, I1, I2, I3, I4, I5, I6, I7, M0, M1, M2, M3, L0, L1, L4, L5>;
0x000028        F1047FF8                 popm <r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, rLink, rFlags>;
0x000029        1940FE44                 M[0xfffe44] = r2 + Null;
0x00002A        85334000                 r1 = r1 OR 0x4000;
0x00002B        1930FE16                 M[0xfffe16] = r1 + Null;
0x00002C        093005DD                 r1 = Null + M[$interrupt.total_time];
0x00002D        2933000C                 r1 = r1 - M[$interrupt.start_time];
0x00002E        0933FE71                 r1 = r1 + M[0xfffe71];
0x00002F        193005DD                 M[$interrupt.total_time] = r1 + Null;
0x000030        F104000C                 popm <r0, r1>;
0x000031        1930FE93                 M[0xfffe93] = r1 + Null;
0x000032        1920FE4D                 M[0xfffe4d] = r0 + Null;
0x000033        F104001C                 popm <r0, r1, r2>;
0x000034        DC0E000F                 rti;

 <$flash.init_pm>
0x000035        FD0000FF 09203555        r0 = Null + M[$flash.code.address];
0x000037        1920FE83                 M[0xfffe83] = r0 + Null;
0x000038        FD000004 85200000        r0 = Null OR 0x40000;
0x00003A        1920FE84                 M[0xfffe84] = r0 + Null;
0x00003B        DC0D000F                 rts;

 <$pre_main>
0x00003C        E1F0FFF9                 call $flash.init_pm;
0x00003D        DDF0095E                 jump $main;
...

 <$frame_sync.usb_in_mono_audio_copy>
0x00011F        F3D00000                 push rLink;
0x000120        D50A0008                 M[r8 + 8] = Null;

 <$frame_sync.usb_in_mono_audio_copy_retry>
0x000121        D12A0000                 r0 = M[r8 + 0];
0x000122        8182000F                 r6 = r0 AND 0xf;
0x000123        0068000F                 r4 = r6 + Null;
0x000124        01400062                 r2 = Null + 98;
0x000125        01500005                 r3 = Null + 5;
0x000126        65080007                 Null = 7 - r6;
0x000127        DD500003                 if POS jump $M.frame_sync.usb_in_mono_audio_copy.lower_port;
0x000128        0068004F                 r4 = r6 + r2;
0x000129        03850000                 r6 = r6 + r3;

 <$M.frame_sync.usb_in_mono_audio_copy.lower_port>
0x00012A        5148FE2B                 I4 = r6 + -469;
0x00012B        D13A0006                 r1 = M[r8 + 6];
0x00012C        D12305C6                 r0 = M[r1 + 1478];
0x00012D        DC02000F                 jump r0;

 <$M.frame_sync.usb_in_mono_audio_copy.idle>
0x00012E        D50A0007                 M[r8 + 7] = Null;
0x00012F        E420002F                 r0 = Null + 1;
0x000130        D13A0005                 r1 = M[r8 + 5];
0x000131        00230001                 if NE r0 = r1 + Null;
0x000132        D52A0005                 M[r8 + 5] = r0;
0x000133        D506FE7B                 M[r4 + -389] = Null;
0x000134        D12A0000                 r0 = M[r8 + 0];
0x000135        E1F0082C                 call $cbuffer.calc_amount_data;
0x000136        00C3000F                 r10 = r1 + Null;
0x000137        E5F00002                 do $M.frame_sync.usb_in_mono_audio_copy.empty_loop;
0x000138        03000020                 Null = Null + Null, r0 = M[I4,0];

 <$M.frame_sync.usb_in_mono_audio_copy.empty_loop>
0x000139        0900FE33                 Null = Null + M[0xfffe33];
0x00013A        D12A0000                 r0 = M[r8 + 0];
0x00013B        E1F00826                 call $cbuffer.calc_amount_data;
0x00013C        0003000F                 Null = r1 + Null;
0x00013D        DD100048                 if NE jump $M.frame_sync.usb_in_mono_audio_copy.exit;
0x00013E        E420002F                 r0 = Null + 1;
0x00013F        D52A0006                 M[r8 + 6] = r0;
0x000140        DDF00045                 jump $M.frame_sync.usb_in_mono_audio_copy.exit;

 <$M.frame_sync.usb_in_mono_audio_copy.syncing_a>
0x000141        D12A0000                 r0 = M[r8 + 0];
0x000142        E1F0081F                 call $cbuffer.calc_amount_data;
0x000143        D12A0002                 r0 = M[r8 + 2];
0x000144        21C20002                 r10 = r0 - 2;
0x000145        E422002F                 r0 = r0 + 1;
0x000146        2003002F                 Null = r1 - r0;
0x000147        DD40003E                 if NEG jump $M.frame_sync.usb_in_mono_audio_copy.exit;
0x000148        D13A0004                 r1 = M[r8 + 4];
0x000149        E433002F                 r1 = r1 + 1;
0x00014A        8133007F                 r1 = r1 AND 0x7f;
0x00014B        03000020                 Null = Null + Null, r0 = M[I4,0];
0x00014C        D14A0006                 r2 = M[r8 + 6];
0x00014D        01500002                 r3 = Null + 2;
0x00014E        D55A0006                 M[r8 + 6] = r3;
0x00014F        E404003F                 Null = r2 - 1;
0x000150        DD000012                 if EQ jump $M.frame_sync.usb_in_mono_audio_copy.skip_and_update;
0x000151        2003002F                 Null = r1 - r0;
0x000152        DD000010                 if EQ jump $M.frame_sync.usb_in_mono_audio_copy.skip_and_update;
0x000153        03000020                 Null = Null + Null, r0 = M[I4,0];
0x000154        03000020                 Null = Null + Null, r0 = M[I4,0];
0x000155        2003002F                 Null = r1 - r0;
0x000156        DD000004                 if EQ jump $M.frame_sync.usb_in_mono_audio_copy.large_packet;
0x000157        01200000                 r0 = Null + 0;
0x000158        D52A0006                 M[r8 + 6] = r0;
0x000159        DDF0002C                 jump $M.frame_sync.usb_in_mono_audio_copy.exit;

 <$M.frame_sync.usb_in_mono_audio_copy.large_packet>
0x00015A        D13A0005                 r1 = M[r8 + 5];
0x00015B        21330002                 r1 = r1 - 2;
0x00015C        DD500003                 if POS jump $M.frame_sync.usb_in_mono_audio_copy.skip_all_large;
0x00015D        01300000                 r1 = Null + 0;
0x00015E        01CC0002                 r10 = r10 + 2;

 <$M.frame_sync.usb_in_mono_audio_copy.skip_all_large>
0x00015F        D53A0007                 M[r8 + 7] = r1;
0x000160        01300003                 r1 = Null + 3;
0x000161        D53A0006                 M[r8 + 6] = r1;

 <$M.frame_sync.usb_in_mono_audio_copy.skip_and_update>
0x000162        D52A0004                 M[r8 + 4] = r0;
0x000163        E5F00002                 do $M.frame_sync.usb_in_mono_audio_copy.skip_loop;
0x000164        03000020                 Null = Null + Null, r0 = M[I4,0];

 <$M.frame_sync.usb_in_mono_audio_copy.skip_loop>
0x000165        D12A0000                 r0 = M[r8 + 0];
0x000166        4430004F                 r1 = Null + I4;
0x000167        E1F00821                 call $cbuffer.set_read_address;
0x000168        DDF0001D                 jump $M.frame_sync.usb_in_mono_audio_copy.exit;

 <$M.frame_sync.usb_in_mono_audio_copy.synced>
0x000169        D12A0001                 r0 = M[r8 + 1];
0x00016A        E1F007E7                 call $cbuffer.calc_amount_space;
0x00016B        0052000F                 r3 = r0 + Null;
0x00016C        D19A0002                 r7 = M[r8 + 2];
0x00016D        9199007F                 r7 = r7 ASHIFT -1;
0x00016E        2005009F                 Null = r3 - r7;
0x00016F        DD400016                 if NEG jump $M.frame_sync.usb_in_mono_audio_copy.exit;
0x000170        0900FE33                 Null = Null + M[0xfffe33];
0x000171        D12A0000                 r0 = M[r8 + 0];
0x000172        E1F007EF                 call $cbuffer.calc_amount_data;
0x000173        01C0FFFE                 r10 = Null + -2;
0x000174        D15A0007                 r3 = M[r8 + 7];
0x000175        20CC00C0                 if EQ r10 = r10 - r10;
0x000176        D12A0002                 r0 = M[r8 + 2];
0x000177        032C0000                 r0 = r0 + r10;
0x000178        8DC2007F                 r10 = r0 LSHIFT -1;
0x000179        E422002F                 r0 = r0 + 1;
0x00017A        2003002F                 Null = r1 - r0;
0x00017B        DD40000A                 if NEG jump $M.frame_sync.usb_in_mono_audio_copy.exit;
0x00017C        D13A0005                 r1 = M[r8 + 5];
0x00017D        E433003F                 r1 = r1 - 1;
0x00017E        E425003F                 r0 = r3 - 1;
0x00017F        00230004                 if NEG r0 = r1 + Null;
0x000180        D52A0007                 M[r8 + 7] = r0;
0x000181        E1F00006                 call $M.frame_sync.usb_in_mono_audio_copy.usb_in_mono_copy_helper;
0x000182        E420002F                 r0 = Null + 1;
0x000183        D52A0008                 M[r8 + 8] = r0;
0x000184        DDF0FF9D                 jump $frame_sync.usb_in_mono_audio_copy_retry;

 <$M.frame_sync.usb_in_mono_audio_copy.exit>
0x000185        51C00000                 L0 = Null + 0;
0x000186        DDF00812                 jump $pop_rLink_and_rts;

 <$M.frame_sync.usb_in_mono_audio_copy.usb_in_mono_copy_helper>
0x000187        F3D00000                 push rLink;
0x000188        D13A0004                 r1 = M[r8 + 4];
0x000189        E433002F                 r1 = r1 + 1;
0x00018A        8133007F                 r1 = r1 AND 0x7f;
0x00018B        D506FE7B                 M[r4 + -389] = Null;
0x00018C        03000020                 Null = Null + Null, r0 = M[I4,0];
0x00018D        D52A0004                 M[r8 + 4] = r0;
0x00018E        2003002F                 Null = r1 - r0;
0x00018F        DD000004                 if EQ jump $M.frame_sync.usb_in_mono_audio_copy.copy_data;
0x000190        01200000                 r0 = Null + 0;
0x000191        D52A0006                 M[r8 + 6] = r0;
0x000192        DDF00012                 jump $M.frame_sync.usb_in_mono_audio_copy.lexit;

 <$M.frame_sync.usb_in_mono_audio_copy.copy_data>
0x000193        E420002F                 r0 = Null + 1;
0x000194        D526FE7B                 M[r4 + -389] = r0;
0x000195        D12A0001                 r0 = M[r8 + 1];
0x000196        E1F007E8                 call $_cbuffer_get_write_address;
0x000197        5000002F                 I0 = Null + r0;
0x000198        50C0003F                 L0 = Null + r1;
0x000199        D15A0003                 r3 = M[r8 + 3];
0x00019A        E5F00004                 do $M.frame_sync.usb_in_mono_audio_copy.lp_mono_loop;
0x00019B        03000020                 Null = Null + Null, r0 = M[I4,0];
0x00019C        93250000                 r0 = r0 ASHIFT r3;
0x00019D        0300A100                 Null = Null + Null, M[I0,1] = r0;

 <$M.frame_sync.usb_in_mono_audio_copy.lp_mono_loop>
0x00019E        D12A0000                 r0 = M[r8 + 0];
0x00019F        4430004F                 r1 = Null + I4;
0x0001A0        E1F007E8                 call $cbuffer.set_read_address;
0x0001A1        D12A0001                 r0 = M[r8 + 1];
0x0001A2        4430000F                 r1 = Null + I0;
0x0001A3        E1F007E9                 call $cbuffer.set_write_address;

 <$M.frame_sync.usb_in_mono_audio_copy.lexit>
0x0001A4        DDF007F4                 jump $pop_rLink_and_rts;

 <ulpN2ufYQYttgIBglrB//yDsfSzsQkGTAcU7vJN9SjY=>
0x0001A5        F3D00000                 push rLink;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001A6        D12A0000                 r0 = M[r8 + 0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001A7        D13A0001                 r1 = M[r8 + 1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001A8        E1F000E3                 call $cbops_multirate.GetTransferAndUpdateOutput;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001A9        00C4000F                 r10 = r2 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001AA        DDD007EE                 if LE jump $pop_rLink_and_rts;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001AB        F3900000                 push r7;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001AC        D12A0000                 r0 = M[r8 + 0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001AD        E1F000F3                 call $cbops_multirate.GetBuffer;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001AE        5040002F                 I4 = Null + r0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001AF        50E0003F                 L4 = Null + r1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001B0        D12A0001                 r0 = M[r8 + 1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001B1        E1F000EF                 call $cbops_multirate.GetBuffer;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001B2        5050002F                 I5 = Null + r0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001B3        50F0003F                 L5 = Null + r1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001B4        D12A0003                 r0 = M[r8 + 3];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001B5        DD000003                 if EQ jump KK47+Ovm1NPwX6mGeSM12MiRUdca7UcuYOXUJNw6rxU=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001B6        D1720009                 r5 = M[r0 + 9];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001B7        DDF00013                 jump UPd1FZS+vKMntT6Kdv4jthEj40XadpJdaPYCq6JIQI4=;

 <KK47+Ovm1NPwX6mGeSM12MiRUdca7UcuYOXUJNw6rxU=>
0x0001B8        D12A0007                 r0 = M[r8 + 7];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001B9        D062000F                 r4 = M[r0 + Null];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001BA        D17A0009                 r5 = M[r8 + 9];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001BB        E430002F                 r1 = Null + 1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001BC        2027006F                 r0 = r5 - r4;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001BD        20200024                 if NEG r0 = Null - r0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001BE        FD000000 954220C5        r2 = r0 * 0.0010000467300415039 (frac);

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001C0        21023127                 Null = r0 - 12583;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001C1        00430004                 if NEG r2 = r1 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001C2        21340026                 r1 = r2 - 38;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001C3        20440035                 if POS r2 = r2 - r1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001C4        2037006F                 r1 = r5 - r4;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001C5        2023004F                 r0 = r1 - r2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001C6        20330025                 if POS r1 = r1 - r0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001C7        0023004F                 r0 = r1 + r2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001C8        20330024                 if NEG r1 = r1 - r0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001C9        23730000                 r5 = r5 - r1;

 <UPd1FZS+vKMntT6Kdv4jthEj40XadpJdaPYCq6JIQI4=>
0x0001CA        D57A0009                 M[r8 + 9] = r5;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001CB        D12A0005                 r0 = M[r8 + 5];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001CC        5000002F                 I0 = Null + r0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001CD        51C0000C                 L0 = Null + 12;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001CE        51D0000C                 L1 = Null + 12;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001CF        D1BA0002                 r9 = M[r8 + 2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001D0        01800015                 r6 = Null + 21;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001D1        51B00001                 M3 = Null + 1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001D2        E1F0000C                 call gdFr9Y4VfOLrCKNzJ6XJMOsUwW89Z3IIa+HLKzzulW8=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001D3        4430000F                 r1 = Null + I0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001D4        D53A0005                 M[r8 + 5] = r1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001D5        51F00000                 L5 = Null + 0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001D6        51E00000                 L4 = Null + 0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001D7        51C00000                 L0 = Null + 0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001D8        51D00000                 L1 = Null + 0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001D9        F3940000                 pop r7;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001DA        4430007F                 r1 = Null + I7;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001DB        D12A0001                 r0 = M[r8 + 1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001DC        E1F000B9                 call $cbops_multirate.SetTransferAmount;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001DD        DDF007BB                 jump $pop_rLink_and_rts;

 <gdFr9Y4VfOLrCKNzJ6XJMOsUwW89Z3IIa+HLKzzulW8=>
0x0001DE        D12A0004                 r0 = M[r8 + 4];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001DF        5132007E                 I3 = r0 + 126;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001E0        D16A000A                 r4 = M[r8 + 10];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001E1        512A000D                 I2 = r8 + 13;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001E2        D17A0009                 r5 = M[r8 + 9];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001E3        D16A000A                 r4 = M[r8 + 10];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001E4        70A0008F                 M2 = Null - r6;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001E5        5080008F                 M0 = Null + r6;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001E6        CC16008F                 rMAC = r4 * r6 (SS);

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001E7        51700000                 I7 = Null + 0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001E8        D12A000B                 r0 = M[r8 + 11];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001E9        DD000003                 if EQ jump pY9sM++Lhx6PecJ+hprBw1MMQx26Bvigx/ufk6utw1s=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001EA        03000031                 Null = Null + Null, r1 = M[I4,1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001EB        67CBB100                 r10 = r10 - M3, M[I0,1] = r1;

 <pY9sM++Lhx6PecJ+hprBw1MMQx26Bvigx/ufk6utw1s=>
0x0001EC        E5F00038                 do 3Yvpty6xuC4I4KpS1nXopKKxMJNrD58weJqbAqiElHE=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001ED        8D510018                 r3 = rMAC LSHIFT 24;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001EE        8D55007F                 r3 = r3 LSHIFT -1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001EF        8D410000                 r2 = rMAC LSHIFT 0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001F0        5863004F                 I6 = I3 + r2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001F1        6524FFEA                 r0 = -22 - r2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001F2        7092004F                 M1 = r0 - r2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001F3        5810000F                 I1 = I0 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001F4        2211273A                 rMAC = rMAC - rMAC, r0 = M[I1,M3], r1 = M[I6,M2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001F5        BE23273A                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001F6        BE23273A                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001F7        BE23273A                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001F8        BE23273A                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001F9        BE232739                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001FA        BE232738                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001FB        BE232738                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001FC        BE232738                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001FD        BE232738                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001FE        BE232738                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0001FF        BE232738                 rMAC = rMAC - r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000200        BF230030                 rMAC = rMAC - r0 * r1 (SS), r1 = M[I4,0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000201        79990002                 M1 = M1 - 2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000202        474B9800                 r2 = r2 + M3, M[I2,0] = rMAC;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000203        DD400003                 if NEG jump 8XjNSGe2tsErWGPeBKGRq7kwTjnusV8EqRdPEWivC44=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000204        71980001                 M1 = r6 - 1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000205        2040B78F                 r2 = Null - r6, M[I1,M3] = r1;

 <8XjNSGe2tsErWGPeBKGRq7kwTjnusV8EqRdPEWivC44=>
0x000206        5863004F                 I6 = I3 + r2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000207        5E7B273A                 I7 = I7 + M3, r0 = M[I1,M3], r1 = M[I6,M2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000208        AE23273A                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000209        AE23273A                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00020A        AE23273A                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00020B        AE23273A                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00020C        AE232739                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00020D        AE232738                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00020E        AE232738                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00020F        AE232738                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000210        AE232738                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000211        AE232738                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000212        AE232738                 rMAC = rMAC + r0 * r1 (SS), r0 = M[I1,M3], r1 = M[I6,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000213        AF233800                 rMAC = rMAC + r0 * r1 (SS), r1 = M[I2,0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000214        CF150051                 rMAC = rMAC * r3 (SS), r3 = M[I4,1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000215        FD00007F BD13FFFF        rMAC = rMAC - r1 * 0.99999988079071045 (SS);

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000217        903100BF                 r1 = rMAC ASHIFT r9;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000218        226700B7                 r4 = r4 - r5, M[I5,M3] = r1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000219        DD40000A                 if NEG jump VrSYD+NSFnUEg06ARirBv7slJUukvubeAp3Rcak8iw4=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00021A        FD000080 01660000        r4 = r4 + -8388608;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00021C        0007000F                 Null = r5 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00021D        DD400004                 if NEG jump qvNjMS5d0Di8w9y2NsG4QoAYwKO0vKnnLLzhTMX1FQs=;

 <SkTx1D7YTGMOdKH3njxMXwNU9PQA01pWkpb9weRioLs=>
0x00021E        03005353                 Null = Null + Null, r3 = M[I0,-1], r3 = M[I4,-1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00021F        47CB5000                 r10 = r10 + M3, r3 = M[I0,0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000220        DDF00003                 jump VrSYD+NSFnUEg06ARirBv7slJUukvubeAp3Rcak8iw4=;

 <qvNjMS5d0Di8w9y2NsG4QoAYwKO0vKnnLLzhTMX1FQs=>
0x000221        66CBD353                 r10 = r10 - M3, M[I0,M3] = r3, r3 = M[I4,M3];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000222        DDD00007                 if LE jump zrINqEEone3BJG2dqpffznhhTEjIGkLtLkN76a8TtIw=;

 <VrSYD+NSFnUEg06ARirBv7slJUukvubeAp3Rcak8iw4=>
0x000223        CC16D38F                 rMAC = r4 * r6 (SS), M[I0,M3] = r3;

 <3Yvpty6xuC4I4KpS1nXopKKxMJNrD58weJqbAqiElHE=>
0x000224        D56A000A                 M[r8 + 10] = r4;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000225        509000CF                 M1 = Null + r10;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000226        6420319F                 r0 = Null - M1, r1 = M[I0,M1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000227        D52A000B                 M[r8 + 11] = r0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000228        DC0D000F                 rts;

 <zrINqEEone3BJG2dqpffznhhTEjIGkLtLkN76a8TtIw=>
0x000229        66CBD300                 r10 = r10 - M3, M[I0,M3] = r3;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00022A        DDF0FFFA                 jump 3Yvpty6xuC4I4KpS1nXopKKxMJNrD58weJqbAqiElHE=;

 <$cbops_multirate.copy>
0x00022B        F3D00000                 push rLink;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00022C        51900001                 M1 = Null + 1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00022D        D19A0000                 r7 = M[r8 + 0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00022E        F3A00000                 push r8;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00022F        F3900000                 push r7;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000230        5000009F                 I0 = Null + r7;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000231        514A0003                 I4 = r8 + 3;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000232        02000021                 Null = Null + Null, r0 = M[I4,M1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000233        00C2000F                 r10 = r0 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000234        02000021                 Null = Null + Null, r0 = M[I4,M1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000235        E5F00007                 do X01z7QV+wLTkTUsDZv9z29y4A0AXaqdbsrPaLVBizXE=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000236        0300A000                 Null = Null + Null, M[I0,0] = r0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000237        E1F00742                 call $_cbuffer_get_read_address;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000238        0032210F                 r1 = r0 + Null, r0 = M[I0,M1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000239        0200B100                 Null = Null + Null, M[I0,M1] = r1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00023A        E1F00727                 call $cbuffer.calc_amount_data;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00023B        0200A121                 Null = Null + Null, M[I0,M1] = r0, r0 = M[I4,M1];

 <X01z7QV+wLTkTUsDZv9z29y4A0AXaqdbsrPaLVBizXE=>
0x00023C        02C20021                 r10 = r10 + r0, r0 = M[I4,M1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00023D        E5F00007                 do euyLoBJCoCIBM6lFAK6wf+YGSgaOac2a+shuLnayiug=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00023E        0300A000                 Null = Null + Null, M[I0,0] = r0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00023F        E1F0073F                 call $_cbuffer_get_write_address;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000240        0032210F                 r1 = r0 + Null, r0 = M[I0,M1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000241        0200B100                 Null = Null + Null, M[I0,M1] = r1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000242        E1F0070F                 call $cbuffer.calc_amount_space;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000243        0200A121                 Null = Null + Null, M[I0,M1] = r0, r0 = M[I4,M1];

 <euyLoBJCoCIBM6lFAK6wf+YGSgaOac2a+shuLnayiug=>
0x000244        02C20021                 r10 = r10 + r0, r0 = M[I4,M1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000245        E5F00008                 do wqnpQ3s/1MpNxxp9op/L4HtEmy7MsssrrqEK4IBAVFc=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000246        0200A100                 Null = Null + Null, M[I0,M1] = r0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000247        D1320002                 r1 = M[r0 + 2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000248        D1520001                 r3 = M[r0 + 1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000249        23530000                 r3 = r3 - r1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00024A        0855002D                 if LE r3 = r3 + M[r0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00024B        6659B100                 r3 = r3 - M1, M[I0,M1] = r1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00024C        0200D121                 Null = Null + Null, M[I0,M1] = r3, r0 = M[I4,M1];

 <wqnpQ3s/1MpNxxp9op/L4HtEmy7MsssrrqEK4IBAVFc=>
0x00024D        D1AA0002                 r8 = M[r8 + 2];

 <GIWnVTmFJ6qK4N3gh+kG4hmkK86ArXW+SlmFOPRUqy4=>
0x00024E        D12A0002                 r0 = M[r8 + 2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00024F        01AA0003                 r8 = r8 + 3;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000250        F198FFFF                 r7 = M[SP + -0x1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000251        D1220001                 r0 = M[r0 + 1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000252        E0020001                 if NE call r0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000253        D1AAFFFD                 r8 = M[r8 + -3];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000254        E40A002F                 Null = r8 + 1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000255        DD10FFF9                 if NE jump GIWnVTmFJ6qK4N3gh+kG4hmkK86ArXW+SlmFOPRUqy4=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000256        F1A8FFFE                 r8 = M[SP + -0x2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000257        F109FFFF                 I0 = M[SP + -0x1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000258        D1CA0003                 r10 = M[r8 + 3];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000259        59000002                 I0 = I0 + 2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00025A        51B00003                 M3 = Null + 3;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00025B        0070230F                 r5 = Null + Null, r0 = M[I0,M3];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00025C        E5F00003                 do jrFP+yzsyQx9OimC8F2imKFmXi3F/w3/UGK+K1UfZi4=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00025D        2007002F                 Null = r5 - r0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00025E        00722304                 if NEG r5 = r0 + Null, r0 = M[I0,M3];

 <jrFP+yzsyQx9OimC8F2imKFmXi3F/w3/UGK+K1UfZi4=>
0x00025F        0007000F                 Null = r5 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000260        DD00001C                 if EQ jump yH+eR/EdN+tJGM5lCCQrTbMUuKq1BERWta6MNc7SFuo=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000261        D1AA0001                 r8 = M[r8 + 1];

 <ZM8z/ZnC5BsyRA6Uk/CtdKqwyV0oKWSFXbOXUSlEH8k=>
0x000262        D12A0002                 r0 = M[r8 + 2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000263        01AA0003                 r8 = r8 + 3;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000264        F198FFFF                 r7 = M[SP + -0x1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000265        D1220002                 r0 = M[r0 + 2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000266        E0020001                 if NE call r0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000267        D1AAFFFE                 r8 = M[r8 + -2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000268        E40A002F                 Null = r8 + 1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000269        DD10FFF9                 if NE jump ZM8z/ZnC5BsyRA6Uk/CtdKqwyV0oKWSFXbOXUSlEH8k=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00026A        F1A8FFFE                 r8 = M[SP + -0x2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00026B        F198FFFF                 r7 = M[SP + -0x1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00026C        51900001                 M1 = Null + 1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00026D        511A0003                 I1 = r8 + 3;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00026E        8ABB2500                 r9 = r9 XOR r9, r0 = M[I1,M1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00026F        00C2250F                 r10 = r0 + Null, r0 = M[I1,M1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000270        E5F00005                 do nWysKSSo38pfeT4P9YdzTNIePSX40NUIGI/QNMFKNmc=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000271        002B000F                 r0 = r9 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000272        E1F0000D                 call 9c9yXqSRDOytjSWfSQ6+H8lKqADWCGjftay2J5CcTgo=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000273        E1F00715                 call $cbuffer.set_read_address;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000274        46B92500                 r9 = r9 + M1, r0 = M[I1,M1];

 <nWysKSSo38pfeT4P9YdzTNIePSX40NUIGI/QNMFKNmc=>
0x000275        00C2000F                 r10 = r0 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000276        E5F00005                 do LfaW9GdKkRZP5wx3yhf9SJsUsTm3QR+wBzlX829rWSM=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000277        002B000F                 r0 = r9 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000278        E1F00007                 call 9c9yXqSRDOytjSWfSQ6+H8lKqADWCGjftay2J5CcTgo=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000279        E1F00713                 call $cbuffer.set_write_address;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00027A        47B90000                 r9 = r9 + M1;

 <LfaW9GdKkRZP5wx3yhf9SJsUsTm3QR+wBzlX829rWSM=>
0x00027B        51C00000                 L0 = Null + 0;

 <yH+eR/EdN+tJGM5lCCQrTbMUuKq1BERWta6MNc7SFuo=>
0x00027C        F3940000                 pop r7;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00027D        F3A40000                 pop r8;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00027E        DDF0071A                 jump $pop_rLink_and_rts;

 <9c9yXqSRDOytjSWfSQ6+H8lKqADWCGjftay2J5CcTgo=>
0x00027F        99420003                 r2 = r0 * 3 (int);

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000280        5024009F                 I2 = r2 + r7;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000281        02002900                 Null = Null + Null, r0 = M[I2,M1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000282        D802000F                 Null = SIGNDET r0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000283        DC0D0000                 if EQ rts;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000284        D1520000                 r3 = M[r0 + 0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000285        50C0395F                 L0 = Null + r3, r1 = M[I2,M1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000286        5000493F                 I0 = Null + r1, r2 = M[I2,M1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000287        50A0004F                 M2 = Null + r2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000288        02004200                 Null = Null + Null, r2 = M[I0,M2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000289        4430000F                 r1 = Null + I0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00028A        DC0D000F                 rts;

 <$cbops_multirate.GetTransferAndUpdateOutput>
0x00028B        01590002                 r3 = r7 + 2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00028C        99220003                 r0 = r0 * 3 (int);

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00028D        99330003                 r1 = r1 * 3 (int);

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00028E        D045002F                 r2 = M[r3 + r0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00028F        D445003F                 M[r3 + r1] = r2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000290        DC0D000F                 rts;

 <$cbops_multirate.GetTransferAmount>
0x000291        99220003                 r0 = r0 * 3 (int);

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000292        03290000                 r0 = r0 + r7;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000293        D1220002                 r0 = M[r0 + 2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000294        DC0D000F                 rts;

 <$cbops_multirate.SetTransferAmount>
0x000295        99220003                 r0 = r0 * 3 (int);

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000296        03290000                 r0 = r0 + r7;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000297        D5320002                 M[r0 + 2] = r1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000298        DC0D000F                 rts;

 <$cbops_multirate.SetMinimumTransferAmount>
0x000299        99220003                 r0 = r0 * 3 (int);

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00029A        03290000                 r0 = r0 + r7;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00029B        D1520002                 r3 = M[r0 + 2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00029C        2003005F                 Null = r1 - r3;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00029D        00350005                 if POS r1 = r3 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00029E        D5320002                 M[r0 + 2] = r1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00029F        DC0D000F                 rts;

 <$cbops_multirate.GetBuffer>
0x0002A0        99420003                 r2 = r0 * 3 (int);

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002A1        03490000                 r2 = r2 + r7;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002A2        D1340000                 r1 = M[r2 + 0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002A3        D1240001                 r0 = M[r2 + 1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002A4        D803000F                 Null = SIGNDET r1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002A5        DD000003                 if EQ jump qZaZ7edDPtNdtCDq6v6d9Za+45cuvySlO6Cj6n/dNnA=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002A6        D1330000                 r1 = M[r1 + 0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002A7        DC0D000F                 rts;

 <qZaZ7edDPtNdtCDq6v6d9Za+45cuvySlO6Cj6n/dNnA=>
0x0002A8        E430002F                 r1 = Null + 1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002A9        0040000F                 r2 = Null + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002AA        DC0D000F                 rts;

 <UYGJyLlFDKQCmjDod/i1GJaYlEtzk0GPLUI8/aL1bXM=>
0x0002AB        F3D00000                 push rLink;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002AC        D14A0009                 r2 = M[r8 + 9];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002AD        DD400006                 if NEG jump U7rrsOAwuq9h+FfBq86fuBJAhL/+qpCUYAu8I1bA5VI=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002AE        D12A000A                 r0 = M[r8 + 10];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002AF        21020003                 Null = r0 - 3;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002B0        DD50006F                 if POS jump DPi9+zpK4erh41r/UjyuzwWk5eVBS11wxGiQaLzeZNs=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002B1        E422002F                 r0 = r0 + 1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002B2        D52A000A                 M[r8 + 10] = r0;

 <U7rrsOAwuq9h+FfBq86fuBJAhL/+qpCUYAu8I1bA5VI=>
0x0002B3        E444002F                 r2 = r2 + 1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002B4        D54A0009                 M[r8 + 9] = r2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002B5        DDF006E3                 jump $pop_rLink_and_rts;

 <YQdP0mcT+xAc8QshpJiNxzxkIFzWjVDT0icj0nrGv4A=>
0x0002B6        F3D00000                 push rLink;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002B7        D12A0000                 r0 = M[r8 + 0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002B8        E1F0FFD9                 call $cbops_multirate.GetTransferAmount;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002B9        D1BA0008                 r9 = M[r8 + 8];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002BA        0002000F                 Null = r0 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002BB        DDD00003                 if LE jump /tEqC1ITVpxP+jbBx4OQSFj1YKEk8hoSWXOulnBBdmE=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002BC        03B20000                 r9 = r9 + r0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002BD        D50A000A                 M[r8 + 10] = Null;

 </tEqC1ITVpxP+jbBx4OQSFj1YKEk8hoSWXOulnBBdmE=>
0x0002BE        D12A0009                 r0 = M[r8 + 9];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002BF        DDD006D9                 if LE jump $pop_rLink_and_rts;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002C0        D5BA0008                 M[r8 + 8] = r9;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002C1        D14A0002                 r2 = M[r8 + 2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002C2        D13A0001                 r1 = M[r8 + 1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002C3        9B340000                 r1 = r1 * r2 (int);

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002C4        2052003F                 r3 = r0 - r1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002C5        DD4006D3                 if NEG jump $pop_rLink_and_rts;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002C6        E430003F                 r1 = Null - 1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002C7        D16A0003                 r4 = M[r8 + 3];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002C8        9876004F                 r5 = r4 * r2 (int);

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002C9        0005000F                 Null = r3 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002CA        DD00000E                 if EQ jump j31cLDWJ9U34ua9a3WgiobyGL/FhrdiGlcCE9F0ibwk=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002CB        D13A0001                 r1 = M[r8 + 1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002CC        D843000F                 r2 = SIGNDET r1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002CD        93340000                 r1 = r1 ASHIFT r2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002CE        FD000020 01100000        rMAC = Null + 2097152;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002D0        D9030000                 Div = rMAC / r1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002D1        9B650000                 r4 = r4 * r3 (int);

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002D2        21440016                 r2 = r2 - 22;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002D3        D9300001                 r1 = DivResult;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002D4        97630000                 r4 = r4 * r1 (frac);

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002D5        93640000                 r4 = r4 ASHIFT r2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002D6        93340000                 r1 = r1 ASHIFT r2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002D7        03760000                 r5 = r5 + r4;

 <j31cLDWJ9U34ua9a3WgiobyGL/FhrdiGlcCE9F0ibwk=>
0x0002D8        0067000F                 r4 = r5 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002D9        D5BA000B                 M[r8 + 11] = r9;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002DA        001B000F                 rMAC = r9 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002DB        D851000F                 r3 = SIGNDET rMAC;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002DC        21B50002                 r9 = r3 - 2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002DD        93EB0000                 rMAC = rMAC ASHIFT r9;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002DE        93650000                 r4 = r4 ASHIFT r3;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002DF        D9060000                 Div = rMAC / r4;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002E0        D15A000C                 r3 = M[r8 + 12];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002E1        D1B50582                 r9 = M[r3 + 1410];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002E2        E455002F                 r3 = r3 + 1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002E3        D16A0004                 r4 = M[r8 + 4];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002E4        2005006F                 Null = r3 - r4;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002E5        00560005                 if POS r3 = r4 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002E6        D55A000C                 M[r8 + 12] = r3;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002E7        FD00007F 0160FFFF        r4 = Null + 8388607;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002E9        203600BF                 r1 = r4 - r9;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002EA        D15A0005                 r3 = M[r8 + 5];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002EB        D9200001                 r0 = DivResult;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002EC        CC1B002F                 rMAC = r9 * r0 (SS);

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002ED        AC13005F                 rMAC = rMAC + r1 * r3 (SS);

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002EE        0061000F                 r4 = rMAC + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002EF        D56A0005                 M[r8 + 5] = r4;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002F0        2032006F                 r1 = r0 - r4;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002F1        20300034                 if NEG r1 = Null - r1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002F2        01501062                 r3 = Null + 4194;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002F3        2003005F                 Null = r1 - r3;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002F4        DD400008                 if NEG jump HuvYmuDxOjRX+/8MouEn6HLhGXntfu2sMd92bP51FTA=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002F5        D50A000C                 M[r8 + 12] = Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002F6        FD000040 01200000        r0 = Null + 4194304;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002F8        D52A0005                 M[r8 + 5] = r0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002F9        D50A000E                 M[r8 + 14] = Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002FA        D50A000D                 M[r8 + 13] = Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002FB        DDF00024                 jump DPi9+zpK4erh41r/UjyuzwWk5eVBS11wxGiQaLzeZNs=;

 <HuvYmuDxOjRX+/8MouEn6HLhGXntfu2sMd92bP51FTA=>
0x0002FC        FD000040 21660000        r4 = r4 - 4194304;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002FE        91660001                 r4 = r4 ASHIFT 1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0002FF        FD000006 01506666        r3 = Null + 419430;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000301        03060000                 Null = Null + r4;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000302        DD500004                 if POS jump 9uhotfq7DzlPwliFeWpFUYzdudHV2S/zUeIEWXM/9Ew=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000303        0006005F                 Null = r4 + r3;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000304        20600054                 if NEG r4 = Null - r3;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000305        DDF00003                 jump lgWeBoPQ05q6D0DzRmYT+wfKKW4uKJ8BrMGZfwMr8F0=;

 <9uhotfq7DzlPwliFeWpFUYzdudHV2S/zUeIEWXM/9Ew=>
0x000306        2006005F                 Null = r4 - r3;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000307        00650005                 if POS r4 = r3 + Null;

 <lgWeBoPQ05q6D0DzRmYT+wfKKW4uKJ8BrMGZfwMr8F0=>
0x000308        D56A000D                 M[r8 + 13] = r4;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000309        9436006F                 r1 = r4 * r4 (frac);

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00030A        23360000                 r1 = r1 - r4;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00030B        D53A000E                 M[r8 + 14] = r1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00030C        D15A000F                 r3 = M[r8 + 15];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00030D        D16A0006                 r4 = M[r8 + 6];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00030E        E455002F                 r3 = r3 + 1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00030F        2006005F                 Null = r4 - r3;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000310        DD40000F                 if NEG jump DPi9+zpK4erh41r/UjyuzwWk5eVBS11wxGiQaLzeZNs=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000311        D55A000F                 M[r8 + 15] = r3;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000312        81050001                 Null = r3 AND 0x1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000313        DD00000C                 if EQ jump DPi9+zpK4erh41r/UjyuzwWk5eVBS11wxGiQaLzeZNs=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000314        E450002F                 r3 = Null + 1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000315        D16A0005                 r4 = M[r8 + 5];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000316        817600FF                 r5 = r4 AND 0xff;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000317        8D660078                 r4 = r4 LSHIFT -8;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000318        D18A000D                 r6 = M[r8 + 13];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000319        812800FF                 r0 = r6 AND 0xff;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00031A        8D220008                 r0 = r0 LSHIFT 8;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00031B        87720000                 r5 = r5 OR r0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00031C        8D880078                 r6 = r6 LSHIFT -8;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00031D        01401025                 r2 = Null + 4133;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00031E        E1F0049C                 call $message.send_short;

 <DPi9+zpK4erh41r/UjyuzwWk5eVBS11wxGiQaLzeZNs=>
0x00031F        D50A0008                 M[r8 + 8] = Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000320        D12A0007                 r0 = M[r8 + 7];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000321        65220000                 r0 = 0 - r0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000322        D52A0009                 M[r8 + 9] = r0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000323        DDF00675                 jump $pop_rLink_and_rts;

 <$cbops.rate_monitor_op.Initialize>
0x000324        F3D00000                 push rLink;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000325        D53A0003                 M[r8 + 3] = r1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000326        01200003                 r0 = Null + 3;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000327        D52A000A                 M[r8 + 10] = r0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000328        DDF0FFF7                 jump DPi9+zpK4erh41r/UjyuzwWk5eVBS11wxGiQaLzeZNs=;
...

 <$frame_sync.sco_decode>
0x000398        F3D00000                 push rLink;

 <$M.frame_sync.sco_decode.jp_check_packet>
0x000399        D1290002                 r0 = M[r7 + 2];
0x00039A        E1F005C7                 call $cbuffer.calc_amount_data;
0x00039B        0002000F                 Null = r0 + Null;
0x00039C        DD0005FC                 if EQ jump $pop_rLink_and_rts;
0x00039D        D1290002                 r0 = M[r7 + 2];
0x00039E        E1F005DB                 call $_cbuffer_get_read_address;
0x00039F        5000002F                 I0 = Null + r0;
0x0003A0        50C0003F                 L0 = Null + r1;
0x0003A1        51900001                 M1 = Null + 1;
0x0003A2        03007100                 Null = Null + Null, r5 = M[I0,1];
0x0003A3        4487419F                 r6 = r5 + M1, r2 = M[I0,M1];
0x0003A4        8D88007F                 r6 = r6 LSHIFT -1;
0x0003A5        50B0218F                 M3 = Null + r6, r0 = M[I0,M1];
0x0003A6        5840000F                 I4 = I0 + Null;
0x0003A7        02002300                 Null = Null + Null, r0 = M[I0,M3];
0x0003A8        4420000F                 r0 = Null + I0;
0x0003A9        5804000F                 I0 = I4 + Null;
0x0003AA        FD0000FF 192035E3        M[$next_packet_value] = r0 + Null;
0x0003AC        D5790007                 M[r7 + 7] = r5;
0x0003AD        81440003                 r2 = r2 AND 0x3;
0x0003AE        D549000C                 M[r7 + 12] = r2;
0x0003AF        D1290003                 r0 = M[r7 + 3];
0x0003B0        E1F005A1                 call $cbuffer.calc_amount_space;
0x0003B1        D1A90009                 r8 = M[r7 + 9];
0x0003B2        D13A0000                 r1 = M[r8 + 0];
0x0003B3        D1AA0003                 r8 = M[r8 + 3];
0x0003B4        00BA000F                 r9 = r8 + Null;
0x0003B5        E003000F                 call r1;
0x0003B6        D5390008                 M[r7 + 8] = r1;
0x0003B7        DD000046                 if EQ jump $M.frame_sync.sco_decode.jp_sco_no_decode;
0x0003B8        D149000C                 r2 = M[r7 + 12];
0x0003B9        D1A90009                 r8 = M[r7 + 9];
0x0003BA        D13A0001                 r1 = M[r8 + 1];
0x0003BB        D1AA0003                 r8 = M[r8 + 3];
0x0003BC        00BA000F                 r9 = r8 + Null;
0x0003BD        E003000F                 call r1;
0x0003BE        50C0000F                 L0 = Null + Null;
0x0003BF        D1290002                 r0 = M[r7 + 2];
0x0003C0        FD0000FF 093035E3        r1 = Null + M[$next_packet_value];
0x0003C2        D5320001                 M[r0 + 1] = r1;
0x0003C3        D579000C                 M[r7 + 12] = r5;
0x0003C4        DD40FFD5                 if NEG jump $M.frame_sync.sco_decode.jp_check_packet;
0x0003C5        51900001                 M1 = Null + 1;
0x0003C6        D129000F                 r0 = M[r7 + 15];
0x0003C7        47290000                 r0 = r0 + M1;
0x0003C8        D1390010                 r1 = M[r7 + 16];
0x0003C9        D109000C                 Null = M[r7 + 12];
0x0003CA        44330091                 if NE r1 = r1 + M1;
0x0003CB        D1490008                 r2 = M[r7 + 8];
0x0003CC        9883004F                 r6 = r1 * r2 (int);
0x0003CD        9852004F                 r3 = r0 * r2 (int);
0x0003CE        D169000D                 r4 = M[r7 + 13];
0x0003CF        D149000E                 r2 = M[r7 + 14];
0x0003D0        D1790006                 r5 = M[r7 + 6];
0x0003D1        2005007F                 Null = r3 - r5;
0x0003D2        9C680045                 if POS r4 = r6 * r2 (int) (sat);
0x0003D3        00200005                 if POS r0 = Null + Null;
0x0003D4        00300005                 if POS r1 = Null + Null;
0x0003D5        D529000F                 M[r7 + 15] = r0;
0x0003D6        D5390010                 M[r7 + 16] = r1;
0x0003D7        D569000D                 M[r7 + 13] = r4;
0x0003D8        D1290005                 r0 = M[r7 + 5];
0x0003D9        D1390004                 r1 = M[r7 + 4];
0x0003DA        8002003F                 Null = r0 AND r1;
0x0003DB        DD00000E                 if EQ jump $M.frame_sync.sco_decode.jp_no_plc;
0x0003DC        D139000A                 r1 = M[r7 + 10];
0x0003DD        DD00FFBC                 if EQ jump $M.frame_sync.sco_decode.jp_check_packet;
0x0003DE        D1290003                 r0 = M[r7 + 3];
0x0003DF        D1490008                 r2 = M[r7 + 8];
0x0003E0        D159000C                 r3 = M[r7 + 12];
0x0003E1        F3900000                 push r7;
0x0003E2        D1990011                 r7 = M[r7 + 17];
0x0003E3        D5290003                 M[r7 + 3] = r0;
0x0003E4        D5490007                 M[r7 + 7] = r2;
0x0003E5        D5590008                 M[r7 + 8] = r3;
0x0003E6        E003000F                 call r1;
0x0003E7        F3940000                 pop r7;
0x0003E8        DDF0FFB1                 jump $M.frame_sync.sco_decode.jp_check_packet;

 <$M.frame_sync.sco_decode.jp_no_plc>
0x0003E9        D1C90008                 r10 = M[r7 + 8];
0x0003EA        D1290003                 r0 = M[r7 + 3];
0x0003EB        E1F00593                 call $_cbuffer_get_write_address;
0x0003EC        5010002F                 I1 = Null + r0;
0x0003ED        50D0003F                 L1 = Null + r1;
0x0003EE        D139000C                 r1 = M[r7 + 12];
0x0003EF        81030002                 Null = r1 AND 0x2;
0x0003F0        DD100004                 if NE jump $M.frame_sync.sco_decode.jp_replace;
0x0003F1        509000CF                 M1 = Null + r10;
0x0003F2        02002500                 Null = Null + Null, r0 = M[I1,M1];
0x0003F3        DDF00005                 jump $M.frame_sync.sco_decode.jp_set_output;

 <$M.frame_sync.sco_decode.jp_replace>
0x0003F4        03002700                 Null = Null + Null, r0 = M[I1,-1];
0x0003F5        03004500                 Null = Null + Null, r2 = M[I1,1];
0x0003F6        E5F00002                 do $M.frame_sync.sco_decode.jp_set_output;
0x0003F7        0300C500                 Null = Null + Null, M[I1,1] = r2;

 <$M.frame_sync.sco_decode.jp_set_output>
0x0003F8        50D0000F                 L1 = Null + Null;
0x0003F9        4430001F                 r1 = Null + I1;
0x0003FA        D1290003                 r0 = M[r7 + 3];
0x0003FB        E1F00591                 call $cbuffer.set_write_address;
0x0003FC        DDF0FF9D                 jump $M.frame_sync.sco_decode.jp_check_packet;

 <$M.frame_sync.sco_decode.jp_sco_no_decode>
0x0003FD        50C0000F                 L0 = Null + Null;
0x0003FE        DDF0059A                 jump $pop_rLink_and_rts;

 <$frame_sync.usb_out_mono_copy>
0x0003FF        F3D00000                 push rLink;
0x000400        D12A0004                 r0 = M[r8 + 4];
0x000401        E452002F                 r3 = r0 + 1;
0x000402        00520000                 if EQ r3 = r0 + Null;
0x000403        D55A0004                 M[r8 + 4] = r3;
0x000404        D12A0001                 r0 = M[r8 + 1];
0x000405        8162001F                 r4 = r0 AND 0x1f;
0x000406        2166000C                 r4 = r4 - 12;
0x000407        0076000F                 r5 = r4 + Null;
0x000408        01300066                 r1 = Null + 102;
0x000409        01C00009                 r10 = Null + 9;
0x00040A        65060007                 Null = 7 - r4;
0x00040B        DD500003                 if POS jump $M.frame_sync.usb_out_mono_copy.lower_port;
0x00040C        0076003F                 r5 = r4 + r1;
0x00040D        036C0000                 r4 = r4 + r10;

 <$M.frame_sync.usb_out_mono_copy.lower_port>
0x00040E        FD0000FF D1363549        r1 = M[r4 + -51895];
0x000410        01200009                 r0 = Null + 9;
0x000411        D527FE73                 M[r5 + -397] = r0;
0x000412        D3300000                 r1 = M[r1 + Null];
0x000413        FD0000FF 092035E5        r0 = Null + M[$M.frame_sync.usb_out_mono_copy.last_limit];
0x000415        FD0000FF 193035E5        M[$M.frame_sync.usb_out_mono_copy.last_limit] = r1 + Null;
0x000417        2003002F                 Null = r1 - r0;
0x000418        DD000003                 if EQ jump $M.frame_sync.usb_out_mono_copy.stall_detected;
0x000419        D50A0004                 M[r8 + 4] = Null;
0x00041A        DDF0000A                 jump $M.frame_sync.usb_out_mono_copy.not_stalled;

 <$M.frame_sync.usb_out_mono_copy.stall_detected>
0x00041B        21050007                 Null = r3 - 7;
0x00041C        DD400008                 if NEG jump $M.frame_sync.usb_out_mono_copy.not_stalled;
0x00041D        DD00002E                 if EQ jump $M.frame_sync.usb_out_mono_copy.purgeport;
0x00041E        D12A0000                 r0 = M[r8 + 0];
0x00041F        E1F0055F                 call $_cbuffer_get_write_address;
0x000420        0032000F                 r1 = r0 + Null;
0x000421        D12A0000                 r0 = M[r8 + 0];
0x000422        E1F00566                 call $cbuffer.set_read_address;
0x000423        DDF00575                 jump $pop_rLink_and_rts;

 <$M.frame_sync.usb_out_mono_copy.not_stalled>
0x000424        51800000                 M0 = Null + 0;
0x000425        510005E6                 I0 = Null + 1510;
0x000426        D12A0001                 r0 = M[r8 + 1];
0x000427        E1F0052A                 call $cbuffer.calc_amount_space;
0x000428        8D44007F                 r2 = r2 LSHIFT -1;
0x000429        2024002F                 r0 = r2 - r0;
0x00042A        E422003F                 r0 = r0 - 1;
0x00042B        D1CA0003                 r10 = M[r8 + 3];
0x00042C        200200CF                 Null = r0 - r10;
0x00042D        DD50056B                 if POS jump $pop_rLink_and_rts;
0x00042E        D12A0000                 r0 = M[r8 + 0];
0x00042F        E1F00532                 call $cbuffer.calc_amount_data;
0x000430        200200CF                 Null = r0 - r10;
0x000431        DD40000C                 if NEG jump $M.frame_sync.usb_out_mono_copy.not_enough_buffer_data;
0x000432        FD0000FF 090035E6        Null = Null + M[$M.frame_sync.usb_out_mono_copy.delay_buffer_read];
0x000434        DD000004                 if EQ jump $M.frame_sync.usb_out_mono_copy.setup_transfer;
0x000435        FD0000FF 190035E6        M[$M.frame_sync.usb_out_mono_copy.delay_buffer_read] = Null + Null;
0x000437        DDF00006                 jump $M.frame_sync.usb_out_mono_copy.not_enough_buffer_data;

 <$M.frame_sync.usb_out_mono_copy.setup_transfer>
0x000438        D12A0000                 r0 = M[r8 + 0];
0x000439        E1F00540                 call $_cbuffer_get_read_address;
0x00043A        5000002F                 I0 = Null + r0;
0x00043B        50C0003F                 L0 = Null + r1;
0x00043C        51800001                 M0 = Null + 1;

 <$M.frame_sync.usb_out_mono_copy.not_enough_buffer_data>
0x00043D        D15A0002                 r3 = M[r8 + 2];
0x00043E        E5F00004                 do $M.frame_sync.usb_out_mono_copy.loop;
0x00043F        02003000                 Null = Null + Null, r1 = M[I0,M0];
0x000440        93350000                 r1 = r1 ASHIFT r3;
0x000441        D536FE23                 M[r4 + -477] = r1;

 <$M.frame_sync.usb_out_mono_copy.loop>
0x000442        51C00000                 L0 = Null + 0;
0x000443        D12A0001                 r0 = M[r8 + 1];
0x000444        E1F00548                 call $cbuffer.set_write_address;
0x000445        47080000                 Null = Null + M0;
0x000446        DD000552                 if EQ jump $pop_rLink_and_rts;
0x000447        D12A0000                 r0 = M[r8 + 0];
0x000448        4430000F                 r1 = Null + I0;
0x000449        E1F0053F                 call $cbuffer.set_read_address;
0x00044A        DDF0054E                 jump $pop_rLink_and_rts;

 <$M.frame_sync.usb_out_mono_copy.purgeport>
0x00044B        FD0000FF 19A035E6        M[$M.frame_sync.usb_out_mono_copy.delay_buffer_read] = r8 + Null;
0x00044D        0900FE33                 Null = Null + M[0xfffe33];
0x00044E        D12A0001                 r0 = M[r8 + 1];
0x00044F        E1F00502                 call $cbuffer.calc_amount_space;
0x000450        E4C2002F                 r10 = r0 + 1;
0x000451        D12A0003                 r0 = M[r8 + 3];
0x000452        03C20000                 r10 = r10 + r0;
0x000453        01200000                 r0 = Null + 0;
0x000454        E5F00002                 do $M.frame_sync.usb_out_mono_copy.flushport;
0x000455        D526FE23                 M[r4 + -477] = r0;

 <$M.frame_sync.usb_out_mono_copy.flushport>
0x000456        D12A0001                 r0 = M[r8 + 1];
0x000457        E1F00535                 call $cbuffer.set_write_address;
0x000458        DDF00540                 jump $pop_rLink_and_rts;

 <$sco_timing.SyncClock>
0x000459        F3D00000                 push rLink;
0x00045A        09A005E4                 r8 = Null + M[$M.sco_timing.sco_data_ptr];
0x00045B        D1730001                 r5 = M[r1 + 1];
0x00045C        FD0000FF 09203586        r0 = Null + M[0xff3586];
0x00045E        0082007F                 r6 = r0 + r5;
0x00045F        D12A0017                 r0 = M[r8 + 23];
0x000460        23280000                 r0 = r0 - r6;
0x000461        01600271                 r4 = Null + 625;
0x000462        FD000000 CD12346E        rMAC = r0 * 0.0016000270843505859 (SS);
0x000464        8D410000                 r2 = rMAC LSHIFT 0;
0x000465        9B460000                 r2 = r2 * r4 (int);
0x000466        2042004F                 r2 = r0 - r2;
0x000467        91E20080                 rMAC = r0 ASHIFT 0 (LO);
0x000468        D12A0016                 r0 = M[r8 + 22];
0x000469        00400000                 if EQ r2 = Null + Null;
0x00046A        D9020000                 Div = rMAC / r0;
0x00046B        21040138                 Null = r2 - 312;
0x00046C        2044006C                 if GT r2 = r2 - r4;
0x00046D        03460000                 r2 = r2 + r4;
0x00046E        03470000                 r2 = r2 + r5;
0x00046F        E1F002A5                 call $timer.schedule_event_at;
0x000470        D12A0016                 r0 = M[r8 + 22];
0x000471        DD000527                 if EQ jump $pop_rLink_and_rts;
0x000472        FD0000FF 09003586        Null = Null + M[0xff3586];
0x000474        DD000524                 if EQ jump $pop_rLink_and_rts;
0x000475        D9600002                 r4 = DivRemainder;
0x000476        0006000F                 Null = r4 + Null;
0x000477        0066002D                 if LE r4 = r4 + r0;
0x000478        0038006F                 r1 = r6 + r4;
0x000479        D53A0017                 M[r8 + 23] = r1;
0x00047A        01660138                 r4 = r4 + 312;
0x00047B        FD000000 CD16346E        rMAC = r4 * 0.0016000270843505859 (SS);
0x00047D        8D410000                 r2 = rMAC LSHIFT 0;
0x00047E        F3400000                 push r2;
0x00047F        FD0000FF 290435E4        Null = r2 - M[$M.sco_timing.sco_rcv_trigger];
0x000481        E1000070                 if EQ call $frame_sync.sco_port_handler;
0x000482        F3440000                 pop r2;
0x000483        E404003F                 Null = r2 - 1;
0x000484        DD100514                 if NE jump $pop_rLink_and_rts;
0x000485        D12A0012                 r0 = M[r8 + 18];
0x000486        E1F0023F                 call $cbuffer.get_write_address_and_size.its_a_port;
0x000487        5040002F                 I4 = Null + r0;
0x000488        50E0003F                 L4 = Null + r1;
0x000489        D12A0014                 r0 = M[r8 + 20];
0x00048A        E1F004EF                 call $_cbuffer_get_read_address;
0x00048B        5000002F                 I0 = Null + r0;
0x00048C        50C0003F                 L0 = Null + r1;
0x00048D        D12A0014                 r0 = M[r8 + 20];
0x00048E        E1F004D3                 call $cbuffer.calc_amount_data;
0x00048F        D1CA0015                 r10 = M[r8 + 21];
0x000490        8D4C007F                 r2 = r10 LSHIFT -1;
0x000491        D13A0012                 r1 = M[r8 + 18];
0x000492        FD00003C 81332000        r1 = r1 AND 0x3c2000;
0x000494        FD00003C 21032000        Null = r1 - 3940352;
0x000496        00C40000                 if EQ r10 = r2 + Null;
0x000497        200200CF                 Null = r0 - r10;
0x000498        00C20004                 if NEG r10 = r0 + Null;
0x000499        D13A0013                 r1 = M[r8 + 19];
0x00049A        E5F00004                 do $M.sco_timing.SyncClock.lp_sco_xmit;
0x00049B        03002100                 Null = Null + Null, r0 = M[I0,1];
0x00049C        93230000                 r0 = r0 ASHIFT r1;
0x00049D        030000A1                 Null = Null + Null, M[I4,1] = r0;

 <$M.sco_timing.SyncClock.lp_sco_xmit>
0x00049E        D12A0014                 r0 = M[r8 + 20];
0x00049F        4430000F                 r1 = Null + I0;
0x0004A0        E1F004E8                 call $cbuffer.set_read_address;
0x0004A1        D12A0012                 r0 = M[r8 + 18];
0x0004A2        4430004F                 r1 = Null + I4;
0x0004A3        E1F004E9                 call $cbuffer.set_write_address;
0x0004A4        50C0000F                 L0 = Null + Null;
0x0004A5        50E0000F                 L4 = Null + Null;
0x0004A6        D10A0018                 Null = M[r8 + 24];
0x0004A7        18900001                 if NE M[r7] = Null + Null;
0x0004A8        D50A0018                 M[r8 + 24] = Null;
0x0004A9        DDF004EF                 jump $pop_rLink_and_rts;

 <$message.received_service_routine>
0x0004AA        F3D00000                 push rLink;
0x0004AB        51800000                 M0 = Null + 0;
0x0004AC        0920FE1D                 r0 = Null + M[0xfffe1d];
0x0004AD        8132FFF0                 r1 = r0 AND 0xfff0;
0x0004AE        8903FFF0                 Null = r1 XOR 0xfff0;
0x0004AF        DD10001E                 if NE jump $M.message.received_service_routine.non_long_message;
0x0004B0        81020001                 Null = r0 AND 0x1;
0x0004B1        DD000003                 if EQ jump $M.message.received_service_routine.not_initial_packet;
0x0004B2        FD0000FF 190035DF        M[$message.long_message_size] = Null + Null;

 <$M.message.received_service_routine.not_initial_packet>
0x0004B4        FD0000FF 093035DF        r1 = Null + M[$message.long_message_size];
0x0004B6        21030052                 Null = r1 - 82;
0x0004B7        DD400002                 if NEG jump $M.message.received_service_routine.message_not_too_long;
0x0004B8        21330004                 r1 = r1 - 4;

 <$M.message.received_service_routine.message_not_too_long>
0x0004B9        0940E006                 r2 = Null + M[0xffe006];
0x0004BA        D543033A                 M[r1 + 826] = r2;
0x0004BB        0940E007                 r2 = Null + M[0xffe007];
0x0004BC        D543033B                 M[r1 + 827] = r2;
0x0004BD        0940E008                 r2 = Null + M[0xffe008];
0x0004BE        D543033C                 M[r1 + 828] = r2;
0x0004BF        0940E009                 r2 = Null + M[0xffe009];
0x0004C0        D543033D                 M[r1 + 829] = r2;
0x0004C1        01330004                 r1 = r1 + 4;
0x0004C2        FD0000FF 193035DF        M[$message.long_message_size] = r1 + Null;
0x0004C4        81020002                 Null = r0 AND 0x2;
0x0004C5        DD100005                 if NE jump $M.message.received_service_routine.final_packet;

 <$M.message.received_service_routine.not_final_packet>
0x0004C6        0970E001                 r5 = Null + M[0xffe001];
0x0004C7        E477002F                 r5 = r5 + 1;
0x0004C8        1970E001                 M[0xffe001] = r5 + Null;
0x0004C9        DDF004CF                 jump $pop_rLink_and_rts;

 <$M.message.received_service_routine.final_packet>
0x0004CA        0920033A                 r0 = Null + M[$message.long_message_data];
0x0004CB        8122FFFF                 r0 = r0 AND 0xffff;
0x0004CC        51800001                 M0 = Null + 1;

 <$M.message.received_service_routine.non_long_message>
0x0004CD        01C00032                 r10 = Null + 50;
0x0004CE        FD0000FF 093035DD        r1 = Null + M[$message.last_addr];
0x0004D0        E5F00009                 do $M.message.received_service_routine.loop;
0x0004D1        E403002F                 Null = r1 + 1;
0x0004D2        DD000008                 if EQ jump $M.message.received_service_routine.no_handler;
0x0004D3        D1430003                 r2 = M[r1 + 3];
0x0004D4        8052004F                 r3 = r0 AND r2;
0x0004D5        D1430001                 r2 = M[r1 + 1];
0x0004D6        2005004F                 Null = r3 - r2;
0x0004D7        DD000007                 if EQ jump $M.message.received_service_routine.found;
0x0004D8        D1330000                 r1 = M[r1 + 0];

 <$M.message.received_service_routine.loop>
0x0004D9        E1F005C3                 call $error;

 <$M.message.received_service_routine.no_handler>
0x0004DA        0970E001                 r5 = Null + M[0xffe001];
0x0004DB        E477002F                 r5 = r5 + 1;
0x0004DC        1970E001                 M[0xffe001] = r5 + Null;
0x0004DD        DDF004BB                 jump $pop_rLink_and_rts;

 <$M.message.received_service_routine.found>
0x0004DE        D1730002                 r5 = M[r1 + 2];
0x0004DF        F3700000                 push r5;
0x0004E0        47080000                 Null = Null + M0;
0x0004E1        DD000006                 if EQ jump $M.message.received_service_routine.short_message_mode;
0x0004E2        0032000F                 r1 = r0 + Null;
0x0004E3        0940033B                 r2 = Null + M[0x33b];
0x0004E4        0150033C                 r3 = Null + 828;
0x0004E5        0120FFFE                 r0 = Null + -2;
0x0004E6        DDF00005                 jump $M.message.received_service_routine.message_mode_done;

 <$M.message.received_service_routine.short_message_mode>
0x0004E7        0930E006                 r1 = Null + M[0xffe006];
0x0004E8        0940E007                 r2 = Null + M[0xffe007];
0x0004E9        0950E008                 r3 = Null + M[0xffe008];
0x0004EA        0960E009                 r4 = Null + M[0xffe009];

 <$M.message.received_service_routine.message_mode_done>
0x0004EB        0970E001                 r5 = Null + M[0xffe001];
0x0004EC        E477002F                 r5 = r5 + 1;
0x0004ED        1970E001                 M[0xffe001] = r5 + Null;
0x0004EE        F3740000                 pop r5;
0x0004EF        E007000F                 call r5;
0x0004F0        DDF004A8                 jump $pop_rLink_and_rts;

 <$frame_sync.sco_port_handler>
0x0004F1        F3D00000                 push rLink;

 <$M.frame_sync.sco_port_handler.jp_do_again>
0x0004F2        D12A0000                 r0 = M[r8 + 0];
0x0004F3        E1F0046E                 call $cbuffer.calc_amount_data;
0x0004F4        192005E3                 M[$sco_port_data] = r0 + Null;
0x0004F5        DD0004A3                 if EQ jump $pop_rLink_and_rts;
0x0004F6        D12A0002                 r0 = M[r8 + 2];
0x0004F7        E1F0045A                 call $cbuffer.calc_amount_space;
0x0004F8        FD0000FF 290235E2        Null = r0 - M[$sco_last_packet_size];
0x0004FA        DD40049E                 if NEG jump $pop_rLink_and_rts;
0x0004FB        D12A0000                 r0 = M[r8 + 0];
0x0004FC        E1F001F1                 call $cbuffer.get_read_address_and_size.its_a_port;
0x0004FD        0082000F                 r6 = r0 + Null;
0x0004FE        D12A0002                 r0 = M[r8 + 2];
0x0004FF        E1F0047F                 call $_cbuffer_get_write_address;
0x000500        5040002F                 I4 = Null + r0;
0x000501        50E0003F                 L4 = Null + r1;
0x000502        097005E3                 r5 = Null + M[$sco_port_data];
0x000503        21070005                 Null = r5 - 5;
0x000504        DD400026                 if NEG jump $M.frame_sync.sco_port_handler.jp_purge;
0x000505        D028000F                 r0 = M[r6 + Null];
0x000506        D058000F                 r3 = M[r6 + Null];
0x000507        21770005                 r5 = r5 - 5;
0x000508        D038000F                 r1 = M[r6 + Null];
0x000509        030000B1                 Null = Null + Null, M[I4,1] = r1;
0x00050A        E4B3002F                 r9 = r1 + 1;
0x00050B        D068000F                 r4 = M[r6 + Null];
0x00050C        030000E1                 Null = Null + Null, M[I4,1] = r4;
0x00050D        D038000F                 r1 = M[r6 + Null];
0x00050E        030000B1                 Null = Null + Null, M[I4,1] = r1;
0x00050F        21025C5C                 Null = r0 - 23644;
0x000510        DD10001A                 if NE jump $M.frame_sync.sco_port_handler.jp_purge;
0x000511        21C50005                 r10 = r3 - 5;
0x000512        200700CF                 Null = r5 - r10;
0x000513        DD400017                 if NEG jump $M.frame_sync.sco_port_handler.jp_purge;
0x000514        237C0000                 r5 = r5 - r10;
0x000515        E5F00003                 do $M.frame_sync.sco_port_handler.lp_skip_hdr;
0x000516        D028000F                 r0 = M[r6 + Null];
0x000517        03000000                 Null = Null + Null;

 <$M.frame_sync.sco_port_handler.lp_skip_hdr>
0x000518        91CB007F                 r10 = r9 ASHIFT -1;
0x000519        200700CF                 Null = r5 - r10;
0x00051A        DD400010                 if NEG jump $M.frame_sync.sco_port_handler.jp_purge;
0x00051B        237C0000                 r5 = r5 - r10;
0x00051C        D12A0001                 r0 = M[r8 + 1];
0x00051D        E1F001D0                 call $cbuffer.get_read_address_and_size.its_a_port;
0x00051E        012C0003                 r0 = r10 + 3;
0x00051F        FD0000FF 192035E2        M[$sco_last_packet_size] = r0 + Null;
0x000521        E5F00003                 do $M.frame_sync.sco_port_handler.lp_copy;
0x000522        D038000F                 r1 = M[r6 + Null];
0x000523        030000B1                 Null = Null + Null, M[I4,1] = r1;

 <$M.frame_sync.sco_port_handler.lp_copy>
0x000524        50E0000F                 L4 = Null + Null;
0x000525        D12A0002                 r0 = M[r8 + 2];
0x000526        4430004F                 r1 = Null + I4;
0x000527        E1F00465                 call $cbuffer.set_write_address;
0x000528        0900FE33                 Null = Null + M[0xfffe33];
0x000529        DDF0FFC9                 jump $M.frame_sync.sco_port_handler.jp_do_again;

 <$M.frame_sync.sco_port_handler.jp_purge>
0x00052A        094005E3                 r2 = Null + M[$sco_port_data];
0x00052B        00C7000F                 r10 = r5 + Null;
0x00052C        E5F00003                 do $M.frame_sync.sco_port_handler.lp_purge;
0x00052D        D038000F                 r1 = M[r6 + Null];
0x00052E        03000000                 Null = Null + Null;

 <$M.frame_sync.sco_port_handler.lp_purge>
0x00052F        50E0000F                 L4 = Null + Null;
0x000530        0900FE33                 Null = Null + M[0xfffe33];
0x000531        DDF00467                 jump $pop_rLink_and_rts;

 <zS7MSjF5Cle15fOEm2R/ce+d5gR1iFKBDUQ04JIAdGs=>
0x000532        F3D00000                 push rLink;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000533        D12A0000                 r0 = M[r8 + 0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000534        D13A0001                 r1 = M[r8 + 1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000535        E1F0FD56                 call $cbops_multirate.GetTransferAndUpdateOutput;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000536        00C4000F                 r10 = r2 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000537        DDD00461                 if LE jump $pop_rLink_and_rts;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000538        F3E20000                 push FP;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000539        51800001                 M0 = Null + 1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00053A        FD00007F 01B0FFFF        r9 = Null + 8388607;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00053C        500000AF                 I0 = Null + r8;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00053D        F3900000                 push r7;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00053E        F2A02000                 push r8, r0 = M[I0,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00053F        E1F0FD61                 call $cbops_multirate.GetBuffer;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000540        5010202F                 I1 = Null + r0, r0 = M[I0,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000541        50D0603F                 L1 = Null + r1, r4 = M[I0,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000542        E1F0FD5E                 call $cbops_multirate.GetBuffer;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000543        5050402F                 I5 = Null + r0, r2 = M[I0,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000544        50F0703F                 L5 = Null + r1, r5 = M[I0,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000545        0056000F                 r3 = r4 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000546        DD000027                 if EQ jump LHzis9sSIyQNb4mEOGlzlSb+zK3DlVfnjRJiKM+A7Y0=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000547        016A0010                 r4 = r8 + 16;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000548        F3600000                 push r4;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000549        F3E60000                 pop FP;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00054A        512A000B                 I2 = r8 + 11;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00054B        51350005                 I3 = r3 + 5;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00054C        D1950004                 r7 = M[r3 + 4];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00054D        DD00000F                 if EQ jump JK96mGzT4IK8ZBzz0ggultS/C7BWL0VQHgJ5tV3VsuM=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00054E        D12A0005                 r0 = M[r8 + 5];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00054F        F1000084                 pushm <r0, r5>;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000550        F1018020                 pushm <I5, L5>;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000551        5050002F                 I5 = Null + r0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000552        50F0000F                 L5 = Null + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000553        0070000F                 r5 = Null + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000554        512A0007                 I2 = r8 + 7;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000555        E009000F                 call r7;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000556        50D0000F                 L1 = Null + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000557        00C9000F                 r10 = r7 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000558        0040000F                 r2 = Null + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000559        F1058020                 popm <I5, L5>;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00055A        F1040084                 popm <r0, r5>;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00055B        5010002F                 I1 = Null + r0;

 <JK96mGzT4IK8ZBzz0ggultS/C7BWL0VQHgJ5tV3VsuM=>
0x00055C        02002C00                 Null = Null + Null, r0 = M[I3,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00055D        03000000                 Null = Null + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00055E        E002000F                 call r0;

 <tZ2kzxBZkH5CP2eZaFm7j7MlIdDLpyykNJDMOfLqWd0=>
0x00055F        F3A40000                 pop r8;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000560        0039000F                 r1 = r7 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000561        F3940000                 pop r7;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000562        D12A0001                 r0 = M[r8 + 1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000563        E1F0FD32                 call $cbops_multirate.SetTransferAmount;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000564        50D0000F                 L1 = Null + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000565        50F0000F                 L5 = Null + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000566        F3000000                 push Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000567        F1AAFFFF                 B0 = M[SP + -0x1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000568        F1BAFFFF                 B1 = M[SP + -0x1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000569        F1CAFFFF                 B4 = M[SP + -0x1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00056A        F3D60000                 pop B5;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00056B        F3E60000                 pop FP;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00056C        DDF0042C                 jump $pop_rLink_and_rts;

 <LHzis9sSIyQNb4mEOGlzlSb+zK3DlVfnjRJiKM+A7Y0=>
0x00056D        009C000F                 r7 = r10 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00056E        03470000                 r2 = r2 + r5;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00056F        66C81400                 r10 = r10 - M0, rMAC = M[I1,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000570        93E40000                 rMAC = rMAC ASHIFT r2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000571        E5F00003                 do 3BX3eEioKBZro9ok5U3oe9k9BIfisebGiGRHblXTbq0=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000572        02001494                 Null = Null + Null, rMAC = M[I1,M0], M[I5,M0] = rMAC;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000573        93E40000                 rMAC = rMAC ASHIFT r2;

 <3BX3eEioKBZro9ok5U3oe9k9BIfisebGiGRHblXTbq0=>
0x000574        02000094                 Null = Null + Null, M[I5,M0] = rMAC;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000575        DDF0FFEA                 jump tZ2kzxBZkH5CP2eZaFm7j7MlIdDLpyykNJDMOfLqWd0=;

 <$cbuffer.configure_port_message_handler>
0x000576        F3D00000                 push rLink;
0x000577        2103000C                 Null = r1 - 12;
0x000578        E1500020                 if POS call $M.cbuffer.configure_port_message_handler.write_port;

 <$M.cbuffer.configure_port_message_handler.read_port>
0x000579        FD0000FF D553353D        M[r1 + -51907] = r3;
0x00057B        D543050E                 M[r1 + 1294] = r2;
0x00057C        DD100006                 if NE jump $M.cbuffer.configure_port_message_handler.read_port_connect;

 <$M.cbuffer.configure_port_message_handler.read_port_disconnect>
0x00057D        01200000                 r0 = Null + 0;
0x00057E        FD0000FF 09D035DA        rLink = Null + M[$cbuffer.read_port_disconnect_address];
0x000580        E00D0001                 if NE call rLink;
0x000581        DDF00417                 jump $pop_rLink_and_rts;

 <$M.cbuffer.configure_port_message_handler.read_port_connect>
0x000582        0023000F                 r0 = r1 + Null;
0x000583        D144FFFF                 r2 = M[r2 + -1];
0x000584        01300040                 r1 = Null + 64;
0x000585        8D440078                 r2 = r2 LSHIFT -8;
0x000586        8C43004F                 r2 = r1 LSHIFT r2;
0x000587        FD0000FF D5423156        M[r0 + -52906] = r2;
0x000589        E430002F                 r1 = Null + 1;
0x00058A        0140000D                 r2 = Null + 13;
0x00058B        2105F000                 Null = r3 - -4096;
0x00058C        00340004                 if NEG r1 = r2 + Null;
0x00058D        F1000014                 pushm <r0, r2>;
0x00058E        01400062                 r2 = Null + 98;
0x00058F        65020007                 Null = 7 - r0;
0x000590        00220044                 if NEG r0 = r0 + r2;
0x000591        D532FE7B                 M[r0 + -389] = r1;
0x000592        F1040014                 popm <r0, r2>;
0x000593        0032000F                 r1 = r0 + Null;
0x000594        E420002F                 r0 = Null + 1;
0x000595        09D005DA                 rLink = Null + M[$cbuffer.read_port_connect_address];
0x000596        E00D0001                 if NE call rLink;
0x000597        DDF00401                 jump $pop_rLink_and_rts;

 <$M.cbuffer.configure_port_message_handler.write_port>
0x000598        FD0000FF D553353D        M[r1 + -51907] = r3;
0x00059A        D543050E                 M[r1 + 1294] = r2;
0x00059B        DD100006                 if NE jump $M.cbuffer.configure_port_message_handler.write_port_connect;

 <$M.cbuffer.configure_port_message_handler.write_port_disconnect>
0x00059C        01200000                 r0 = Null + 0;
0x00059D        FD0000FF 09D035D9        rLink = Null + M[$cbuffer.write_port_disconnect_address];
0x00059F        E00D0001                 if NE call rLink;
0x0005A0        DDF003F8                 jump $pop_rLink_and_rts;

 <$M.cbuffer.configure_port_message_handler.write_port_connect>
0x0005A1        0023000F                 r0 = r1 + Null;
0x0005A2        D144FFFF                 r2 = M[r2 + -1];
0x0005A3        01300040                 r1 = Null + 64;
0x0005A4        8D440078                 r2 = r2 LSHIFT -8;
0x0005A5        8C43004F                 r2 = r1 LSHIFT r2;
0x0005A6        FD0000FF D5423156        M[r0 + -52906] = r2;
0x0005A8        01300009                 r1 = Null + 9;
0x0005A9        01400005                 r2 = Null + 5;
0x0005AA        2105F000                 Null = r3 - -4096;
0x0005AB        00340004                 if NEG r1 = r2 + Null;
0x0005AC        F1000014                 pushm <r0, r2>;
0x0005AD        2122000C                 r0 = r0 - 12;
0x0005AE        01400066                 r2 = Null + 102;
0x0005AF        65020007                 Null = 7 - r0;
0x0005B0        00220044                 if NEG r0 = r0 + r2;
0x0005B1        D532FE73                 M[r0 + -397] = r1;
0x0005B2        F1040014                 popm <r0, r2>;
0x0005B3        0032000F                 r1 = r0 + Null;
0x0005B4        E420002F                 r0 = Null + 1;
0x0005B5        09D005D9                 rLink = Null + M[$cbuffer.write_port_connect_address];
0x0005B6        E00D0001                 if NE call rLink;
0x0005B7        DDF003E1                 jump $pop_rLink_and_rts;

 <$frame_sync.task_scheduler_run>
0x0005B8        0930FE71                 r1 = Null + M[0xfffe71];
0x0005B9        096005DD                 r4 = Null + M[$interrupt.total_time];
0x0005BA        0980FE4D                 r6 = Null + M[0xfffe4d];
0x0005BB        0120003F                 r0 = Null + 63;
0x0005BC        1920FE4D                 M[0xfffe4d] = r0 + Null;

 <$M.frame_sync.task_scheduler_run.jp_wait>
0x0005BD        D14A0008                 r2 = M[r8 + 8];
0x0005BE        DD00FFFF                 if EQ jump $M.frame_sync.task_scheduler_run.jp_wait;
0x0005BF        1980FE4D                 M[0xfffe4d] = r6 + Null;
0x0005C0        0950FE71                 r3 = Null + M[0xfffe71];
0x0005C1        D12A0005                 r0 = M[r8 + 5];
0x0005C2        2035003F                 r1 = r3 - r1;
0x0005C3        296605DD                 r4 = r4 - M[$interrupt.total_time];
0x0005C4        03360000                 r1 = r1 + r4;
0x0005C5        03320000                 r1 = r1 + r0;
0x0005C6        D53A0005                 M[r8 + 5] = r1;
0x0005C7        D12A0007                 r0 = M[r8 + 7];
0x0005C8        2075002F                 r5 = r3 - r0;
0x0005C9        FD00000F 01104240        rMAC = Null + 1000000;
0x0005CB        2007001F                 Null = r5 - rMAC;
0x0005CC        DD400011                 if NEG jump $M.frame_sync.task_scheduler_run.jp_mips_done;
0x0005CD        91E1007F                 rMAC = rMAC ASHIFT -1 (MI);
0x0005CE        D9070000                 Div = rMAC / r5;
0x0005CF        2017003F                 rMAC = r5 - r1;
0x0005D0        D17A0006                 r5 = M[r8 + 6];
0x0005D1        D55A0007                 M[r8 + 7] = r3;
0x0005D2        D50A0005                 M[r8 + 5] = Null;
0x0005D3        D50A0006                 M[r8 + 6] = Null;
0x0005D4        D9500001                 r3 = DivResult;
0x0005D5        9415001F                 rMAC = r3 * rMAC (frac);
0x0005D6        9475007F                 r5 = r3 * r5 (frac);
0x0005D7        FD000001 01500625        r3 = Null + 67109;
0x0005D9        97150000                 rMAC = rMAC * r3 (frac);
0x0005DA        97750000                 r5 = r5 * r3 (frac);
0x0005DB        D51A0003                 M[r8 + 3] = rMAC;
0x0005DC        D57A0004                 M[r8 + 4] = r5;

 <$M.frame_sync.task_scheduler_run.jp_mips_done>
0x0005DD        D844000F                 r2 = SIGNDET r2;
0x0005DE        8D540001                 r3 = r2 LSHIFT 1;
0x0005DF        01550009                 r3 = r3 + 9;
0x0005E0        D05A005F                 r3 = M[r8 + r3];
0x0005E1        FD0000BF 0160FFFF        r4 = Null + -4194305;
0x0005E3        2040004F                 r2 = Null - r2;
0x0005E4        9046004F                 r2 = r4 ASHIFT r2;
0x0005E5        F3D00000                 push rLink;
0x0005E6        E1F00383                 call $block_interrupts;
0x0005E7        D16A0008                 r4 = M[r8 + 8];
0x0005E8        83640000                 r4 = r4 AND r2;
0x0005E9        D56A0008                 M[r8 + 8] = r4;
0x0005EA        E1F00353                 call $interrupt.unblock;
0x0005EB        E005000F                 call r3;
0x0005EC        DDF003AC                 jump $pop_rLink_and_rts;

 <$sco_params_handler>
0x0005ED        51900001                 M1 = Null + 1;
0x0005EE        09A005E4                 r8 = Null + M[$M.sco_timing.sco_data_ptr];
0x0005EF        D1350005                 r1 = M[r3 + 5];
0x0005F0        D1450006                 r2 = M[r3 + 6];
0x0005F1        8DE30078                 rMAC = r1 LSHIFT -8 (MI);
0x0005F2        811100FF                 rMAC = rMAC AND 0xff;
0x0005F3        991104E2                 rMAC = rMAC * 1250 (int);
0x0005F4        8D330010                 r1 = r1 LSHIFT 16;
0x0005F5        8144FFFF                 r2 = r2 AND 0xffff;
0x0005F6        03430000                 r2 = r2 + r1;
0x0005F7        FD000000 A1140271        rMAC = rMAC + r2 * 3.7252902984619141e-005 (UU);
0x0005F9        8D810016                 r6 = rMAC LSHIFT 22;
0x0005FA        D1350007                 r1 = M[r3 + 7];
0x0005FB        23830000                 r6 = r6 - r1;
0x0005FC        D1450008                 r2 = M[r3 + 8];
0x0005FD        D1950001                 r7 = M[r3 + 1];
0x0005FE        03430000                 r2 = r2 + r1;
0x0005FF        FD000000 CD14346E        rMAC = r2 * 0.0016000270843505859 (SS);
0x000601        8D410000                 r2 = rMAC LSHIFT 0;
0x000602        2004009F                 Null = r2 - r7;
0x000603        20440095                 if POS r2 = r2 - r7;
0x000604        194005E5                 M[$M.sco_timing.rcv_proc_trigger] = r2 + Null;
0x000605        20490041                 if NE r2 = r7 - r2;
0x000606        67490000                 r2 = r2 - M1;
0x000607        4440009D                 if LE r2 = Null + M1;
0x000608        FD0000FF 194035E4        M[$M.sco_timing.sco_rcv_trigger] = r2 + Null;
0x00060A        D1250003                 r0 = M[r3 + 3];
0x00060B        D52A0015                 M[r8 + 21] = r0;
0x00060C        D14A0019                 r2 = M[r8 + 25];
0x00060D        18420001                 if NE M[r2] = r0 + Null;
0x00060E        D17A0016                 r5 = M[r8 + 22];
0x00060F        D1950001                 r7 = M[r3 + 1];
0x000610        99990271                 r7 = r7 * 625 (int);
0x000611        D59A0016                 M[r8 + 22] = r7;
0x000612        D13A0017                 r1 = M[r8 + 23];
0x000613        D58A0017                 M[r8 + 23] = r6;
0x000614        0007000F                 Null = r5 + Null;
0x000615        DD00000A                 if EQ jump $M.sco_timing.sco_params_handler.jp_force_reset;
0x000616        23380000                 r1 = r1 - r6;
0x000617        DC0D0000                 if EQ rts;
0x000618        91E30080                 rMAC = r1 ASHIFT 0 (LO);
0x000619        D9090000                 Div = rMAC / r7;
0x00061A        D9600002                 r4 = DivRemainder;
0x00061B        03000000                 Null = Null + Null;
0x00061C        20600064                 if NEG r4 = Null - r4;
0x00061D        21060138                 Null = r4 - 312;
0x00061E        DC0D0004                 if NEG rts;

 <$M.sco_timing.sco_params_handler.jp_force_reset>
0x00061F        D59A0018                 M[r8 + 24] = r7;
0x000620        DC0D000F                 rts;

 <$wall_clock.message_handler>
0x000621        F3D00000                 push rLink;
0x000622        E455002F                 r3 = r3 + 1;
0x000623        01C00007                 r10 = Null + 7;
0x000624        098005E2                 r6 = Null + M[$wall_clock.last_addr];
0x000625        E5F00014                 do $M.wall_clock.message_handler.loop;
0x000626        E408002F                 Null = r6 + 1;
0x000627        DD000013                 if EQ jump $M.wall_clock.message_handler.no_handler;
0x000628        D1280001                 r0 = M[r6 + 1];
0x000629        D135FFFF                 r1 = M[r3 + -1];
0x00062A        813300FF                 r1 = r1 AND 0xff;
0x00062B        2002003F                 Null = r0 - r1;
0x00062C        DD10000C                 if NE jump $M.wall_clock.message_handler.no_match;
0x00062D        D1280002                 r0 = M[r6 + 2];
0x00062E        2802005F                 Null = r0 - M[r3];
0x00062F        DD100009                 if NE jump $M.wall_clock.message_handler.no_match;
0x000630        D1280003                 r0 = M[r6 + 3];
0x000631        D1350001                 r1 = M[r3 + 1];
0x000632        2002003F                 Null = r0 - r1;
0x000633        DD100005                 if NE jump $M.wall_clock.message_handler.no_match;
0x000634        D1280004                 r0 = M[r6 + 4];
0x000635        D1350002                 r1 = M[r3 + 2];
0x000636        2002003F                 Null = r0 - r1;
0x000637        DD000004                 if EQ jump $M.wall_clock.message_handler.found;

 <$M.wall_clock.message_handler.no_match>
0x000638        D1880000                 r6 = M[r6 + 0];

 <$M.wall_clock.message_handler.loop>
0x000639        E1F00463                 call $error;

 <$M.wall_clock.message_handler.no_handler>
0x00063A        DDF0035E                 jump $pop_rLink_and_rts;

 <$M.wall_clock.message_handler.found>
0x00063B        D1350003                 r1 = M[r3 + 3];
0x00063C        D1450004                 r2 = M[r3 + 4];
0x00063D        8DE30078                 rMAC = r1 LSHIFT -8 (MI);
0x00063E        811100FF                 rMAC = rMAC AND 0xff;
0x00063F        991104E2                 rMAC = rMAC * 1250 (int);
0x000640        8D330010                 r1 = r1 LSHIFT 16;
0x000641        8144FFFF                 r2 = r2 AND 0xffff;
0x000642        03430000                 r2 = r2 + r1;
0x000643        FD000000 A1140271        rMAC = rMAC + r2 * 3.7252902984619141e-005 (UU);
0x000645        8D410016                 r2 = rMAC LSHIFT 22;
0x000646        D1650006                 r4 = M[r3 + 6];
0x000647        D1550005                 r3 = M[r3 + 5];
0x000648        8D550010                 r3 = r3 LSHIFT 16;
0x000649        8166FFFF                 r4 = r4 AND 0xffff;
0x00064A        03650000                 r4 = r4 + r3;
0x00064B        23460000                 r2 = r2 - r4;
0x00064C        D5480005                 M[r6 + 5] = r2;
0x00064D        D1280006                 r0 = M[r6 + 6];
0x00064E        E0020001                 if NE call r0;
0x00064F        DDF00349                 jump $pop_rLink_and_rts;

 <$message.private.try_to_send_message>
0x000650        F3D00000                 push rLink;
0x000651        E1F00318                 call $block_interrupts;
0x000652        0920E000                 r0 = Null + M[0xffe000];
0x000653        292205DF                 r0 = r0 - M[$message.last_seq_sent];
0x000654        8102FFFF                 Null = r0 AND 0xffff;
0x000655        DD10001B                 if NE jump $M.message.private.try_to_send_message.queue_not_empty;
0x000656        093005DE                 r1 = Null + M[$message.queue_read_ptr];
0x000657        FD0000FF D123330F        r0 = M[r1 + -52465];
0x000659        1920E002                 M[0xffe002] = r0 + Null;
0x00065A        FD0000FF D1233310        r0 = M[r1 + -52464];
0x00065C        1920E003                 M[0xffe003] = r0 + Null;
0x00065D        FD0000FF D1233311        r0 = M[r1 + -52463];
0x00065F        1920E004                 M[0xffe004] = r0 + Null;
0x000660        FD0000FF D1233312        r0 = M[r1 + -52462];
0x000662        1920E005                 M[0xffe005] = r0 + Null;
0x000663        092005DF                 r0 = Null + M[$message.last_seq_sent];
0x000664        E422002F                 r0 = r0 + 1;
0x000665        192005DF                 M[$message.last_seq_sent] = r0 + Null;
0x000666        FD0000FF D123330E        r0 = M[r1 + -52466];
0x000668        1920FE1B                 M[0xfffe1b] = r0 + Null;
0x000669        01330005                 r1 = r1 + 5;
0x00066A        2103006E                 Null = r1 - 110;
0x00066B        00300000                 if EQ r1 = Null + Null;
0x00066C        193005DE                 M[$message.queue_read_ptr] = r1 + Null;
0x00066D        FD0000FF 290335DE        Null = r1 - M[$message.queue_write_ptr];
0x00066F        DD000009                 if EQ jump $M.message.private.try_to_send_message.all_done;

 <$M.message.private.try_to_send_message.queue_not_empty>
0x000670        FD0000FF 094033FF        r2 = Null + M[0xff33ff];
0x000672        E1F001A3                 call $timer.cancel_event;
0x000673        FD0000FF 013033FC        r1 = Null + -52228;
0x000675        014003E8                 r2 = Null + 1000;
0x000676        01500650                 r3 = Null + 1616;
0x000677        E1F0031D                 call $timer.schedule_event_in;

 <$M.message.private.try_to_send_message.all_done>
0x000678        E1F002C5                 call $interrupt.unblock;
0x000679        DDF0031F                 jump $pop_rLink_and_rts;

 <Cmhz3n9tB93fzfXyHcj55uhoUtWptgsBgyfYarBYbZ4=>
0x00067A        D14A0002                 r2 = M[r8 + 2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00067B        DD0002B6                 if EQ jump $cbops.copy_op.amount_to_use;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00067C        F3D00000                 push rLink;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00067D        51800001                 M0 = Null + 1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00067E        5020004F                 I2 = Null + r2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00067F        D12A0001                 r0 = M[r8 + 1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000680        E1F0FC11                 call $cbops_multirate.GetTransferAmount;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000681        8A446800                 r2 = r2 XOR r2, r4 = M[I2,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000682        9816782F                 rMAC = r4 * r0 (int), r5 = M[I2,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000683        AC17002F                 rMAC = rMAC + r5 * r0 (SS);

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000684        67180000                 rMAC = rMAC - M0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000685        00100004                 if NEG rMAC = Null + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000686        0031000F                 r1 = rMAC + Null;
0x000687        02002800                 Null = Null + Null, r0 = M[I2,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000688        D16A0006                 r4 = M[r8 + 6];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000689        9812586F                 rMAC = r0 * r4 (int), r3 = M[I2,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00068A        AC15006F                 rMAC = rMAC + r3 * r4 (SS);

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00068B        DD000005                 if EQ jump wsTl3zJzPx5R8IdSEsvNfVSCTICdwYj70l0wKQUUwHM=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00068C        67180000                 rMAC = rMAC - M0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00068D        00100004                 if NEG rMAC = Null + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00068E        2003001F                 Null = r1 - rMAC;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00068F        00310005                 if POS r1 = rMAC + Null;

 <wsTl3zJzPx5R8IdSEsvNfVSCTICdwYj70l0wKQUUwHM=>
0x000690        D12A0000                 r0 = M[r8 + 0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000691        E1F0FC08                 call $cbops_multirate.SetMinimumTransferAmount;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000692        D10A000F                 Null = M[r8 + 15];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000693        DD100305                 if NE jump $pop_rLink_and_rts;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000694        D15A0002                 r3 = M[r8 + 2];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000695        D55A000F                 M[r8 + 15] = r3;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000696        016A0010                 r4 = r8 + 16;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000697        512A000B                 I2 = r8 + 11;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000698        51350005                 I3 = r3 + 5;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000699        D1050004                 Null = M[r3 + 4];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00069A        DD000003                 if EQ jump a1V4zT+6mStDGYX/CrTN8WNIOB9tzzPnTuLWTmFwUNA=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00069B        512A0007                 I2 = r8 + 7;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00069C        E1F001A6                 call $reset_iir_resampler;

 <a1V4zT+6mStDGYX/CrTN8WNIOB9tzzPnTuLWTmFwUNA=>
0x00069D        5F380000                 I3 = I3 + M0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00069E        E1F001A4                 call $reset_iir_resampler;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00069F        50C0000F                 L0 = Null + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0006A0        DDF002F8                 jump $pop_rLink_and_rts;

 <$sco_timing.PortConnected>
0x0006A1        09A005E4                 r8 = Null + M[$M.sco_timing.sco_data_ptr];
0x0006A2        DC0D0000                 if EQ rts;
0x0006A3        D12A0012                 r0 = M[r8 + 18];
0x0006A4        8122001F                 r0 = r0 AND 0x1f;
0x0006A5        2003002F                 Null = r1 - r0;
0x0006A6        DC0D0001                 if NE rts;
0x0006A7        F3D00000                 push rLink;
0x0006A8        D50A0016                 M[r8 + 22] = Null;
0x0006A9        FD000000 01408018        r2 = Null + 32792;
0x0006AB        8153001F                 r3 = r1 AND 0x1f;
0x0006AC        F3500000                 push r3;
0x0006AD        E1F0010D                 call $message.send_short;
0x0006AE        FD000000 01408014        r2 = Null + 32788;
0x0006B0        F3540000                 pop r3;
0x0006B1        E1F00109                 call $message.send_short;
0x0006B2        DDF002E6                 jump $pop_rLink_and_rts;

 <$sco_timing.PortDisConnected>
0x0006B3        09A005E4                 r8 = Null + M[$M.sco_timing.sco_data_ptr];
0x0006B4        DC0D0000                 if EQ rts;
0x0006B5        D12A0012                 r0 = M[r8 + 18];
0x0006B6        8122001F                 r0 = r0 AND 0x1f;
0x0006B7        2003002F                 Null = r1 - r0;
0x0006B8        DC0D0001                 if NE rts;

 <$sco_timing.ScoDisconnect>
0x0006B9        F3D00000                 push rLink;
0x0006BA        FD0000FF 01303581        r1 = Null + -51839;
0x0006BC        D1030000                 Null = M[r1 + 0];
0x0006BD        E110019C                 if NE call $wall_clock.disable;
0x0006BE        FD0000FF 01303581        r1 = Null + -51839;
0x0006C0        D5030000                 M[r1 + 0] = Null;
0x0006C1        D5030005                 M[r1 + 5] = Null;
0x0006C2        09A005E4                 r8 = Null + M[$M.sco_timing.sco_data_ptr];
0x0006C3        D50A0016                 M[r8 + 22] = Null;
0x0006C4        DDF002D4                 jump $pop_rLink_and_rts;

 <$cbuffer.get_write_address_and_size.its_a_port>
0x0006C5        8132001F                 r1 = r0 AND 0x1f;
0x0006C6        2133000C                 r1 = r1 - 12;
0x0006C7        F1000030                 pushm <r2, r3>;
0x0006C8        FD000033 8102FC00        Null = r0 AND 0x33fc00;
0x0006CA        DD00001A                 if EQ jump $M.cbuffer.get_write_address_and_size.its_a_port.no_forcing;
0x0006CB        01400066                 r2 = Null + 102;
0x0006CC        65030007                 Null = 7 - r1;
0x0006CD        00330044                 if NEG r1 = r1 + r2;
0x0006CE        D153FE73                 r3 = M[r1 + -397];
0x0006CF        FD000030 81420000        r2 = r0 AND 0x300000;
0x0006D1        DD000005                 if EQ jump $M.cbuffer.get_write_address_and_size.its_a_port.no_forcing_endian;
0x0006D2        8155FFFB                 r3 = r3 AND 0xfffb;
0x0006D3        8D44006B                 r2 = r2 LSHIFT -21;
0x0006D4        8D440002                 r2 = r2 LSHIFT 2;
0x0006D5        87540000                 r3 = r3 OR r2;

 <$M.cbuffer.get_write_address_and_size.its_a_port.no_forcing_endian>
0x0006D6        FD000003 81428000        r2 = r0 AND 0x38000;
0x0006D8        DD000005                 if EQ jump $M.cbuffer.get_write_address_and_size.its_a_port.no_forcing_bitwidth;
0x0006D9        8155FFFC                 r3 = r3 AND 0xfffc;
0x0006DA        8D440070                 r2 = r2 LSHIFT -16;
0x0006DB        8D440000                 r2 = r2 LSHIFT 0;
0x0006DC        87540000                 r3 = r3 OR r2;

 <$M.cbuffer.get_write_address_and_size.its_a_port.no_forcing_bitwidth>
0x0006DD        81426000                 r2 = r0 AND 0x6000;
0x0006DE        DD000005                 if EQ jump $M.cbuffer.get_write_address_and_size.its_a_port.no_forcing_saturate;
0x0006DF        8155FFF7                 r3 = r3 AND 0xfff7;
0x0006E0        8D440072                 r2 = r2 LSHIFT -14;
0x0006E1        8D440003                 r2 = r2 LSHIFT 3;
0x0006E2        87540000                 r3 = r3 OR r2;

 <$M.cbuffer.get_write_address_and_size.its_a_port.no_forcing_saturate>
0x0006E3        D553FE73                 M[r1 + -397] = r3;

 <$M.cbuffer.get_write_address_and_size.its_a_port.no_forcing>
0x0006E4        8132001F                 r1 = r0 AND 0x1f;
0x0006E5        2133000C                 r1 = r1 - 12;
0x0006E6        01400009                 r2 = Null + 9;
0x0006E7        65030007                 Null = 7 - r1;
0x0006E8        00330044                 if NEG r1 = r1 + r2;
0x0006E9        F1040030                 popm <r2, r3>;
0x0006EA        0123FE23                 r0 = r1 + -477;
0x0006EB        E430002F                 r1 = Null + 1;
0x0006EC        DC0D000F                 rts;

 <$cbuffer.get_read_address_and_size.its_a_port>
0x0006ED        8132001F                 r1 = r0 AND 0x1f;
0x0006EE        FD00003F 81029C00        Null = r0 AND 0x3f9c00;
0x0006F0        DD00001D                 if EQ jump $M.cbuffer.get_read_address_and_size.its_a_port.no_forcing;
0x0006F1        F1000030                 pushm <r2, r3>;
0x0006F2        01400062                 r2 = Null + 98;
0x0006F3        65030007                 Null = 7 - r1;
0x0006F4        00330044                 if NEG r1 = r1 + r2;
0x0006F5        D153FE7B                 r3 = M[r1 + -389];
0x0006F6        FD000030 81420000        r2 = r0 AND 0x300000;
0x0006F8        DD000005                 if EQ jump $M.cbuffer.get_read_address_and_size.its_a_port.no_forcing_endian;
0x0006F9        8155FFFB                 r3 = r3 AND 0xfffb;
0x0006FA        8D44006B                 r2 = r2 LSHIFT -21;
0x0006FB        8D440002                 r2 = r2 LSHIFT 2;
0x0006FC        87540000                 r3 = r3 OR r2;

 <$M.cbuffer.get_read_address_and_size.its_a_port.no_forcing_endian>
0x0006FD        FD00000C 81420000        r2 = r0 AND 0xc0000;
0x0006FF        DD000005                 if EQ jump $M.cbuffer.get_read_address_and_size.its_a_port.no_forcing_sign_extend;
0x000700        8155FFF7                 r3 = r3 AND 0xfff7;
0x000701        8D44006D                 r2 = r2 LSHIFT -19;
0x000702        8D440003                 r2 = r2 LSHIFT 3;
0x000703        87540000                 r3 = r3 OR r2;

 <$M.cbuffer.get_read_address_and_size.its_a_port.no_forcing_sign_extend>
0x000704        FD000003 81428000        r2 = r0 AND 0x38000;
0x000706        DD000005                 if EQ jump $M.cbuffer.get_read_address_and_size.its_a_port.no_forcing_bitwidth;
0x000707        8155FFFC                 r3 = r3 AND 0xfffc;
0x000708        8D440070                 r2 = r2 LSHIFT -16;
0x000709        8D440000                 r2 = r2 LSHIFT 0;
0x00070A        87540000                 r3 = r3 OR r2;

 <$M.cbuffer.get_read_address_and_size.its_a_port.no_forcing_bitwidth>
0x00070B        D553FE7B                 M[r1 + -389] = r3;
0x00070C        F1040030                 popm <r2, r3>;

 <$M.cbuffer.get_read_address_and_size.its_a_port.no_forcing>
0x00070D        8122001F                 r0 = r0 AND 0x1f;
0x00070E        01300005                 r1 = Null + 5;
0x00070F        65020007                 Null = 7 - r0;
0x000710        00220034                 if NEG r0 = r0 + r1;
0x000711        0122FE2B                 r0 = r0 + -469;
0x000712        E430002F                 r1 = Null + 1;
0x000713        DC0D000F                 rts;

 <$timer.schedule_event_at>
0x000714        F3D00000                 push rLink;
0x000715        E1F00254                 call $block_interrupts;
0x000716        01C00032                 r10 = Null + 50;
0x000717        FD0000FF 016035E1        r4 = Null + -51743;
0x000719        FD0000FF 092035E1        r0 = Null + M[$timer.last_addr];
0x00071B        E5F00008                 do $M.timer.schedule_event_at.loop;
0x00071C        E402002F                 Null = r0 + 1;
0x00071D        DD000007                 if EQ jump $M.timer.schedule_event_at.insert_here;
0x00071E        D1720001                 r5 = M[r0 + 1];
0x00071F        2004007F                 Null = r2 - r5;
0x000720        DD400004                 if NEG jump $M.timer.schedule_event_at.insert_here;
0x000721        0062000F                 r4 = r0 + Null;
0x000722        D1220000                 r0 = M[r0 + 0];

 <$M.timer.schedule_event_at.loop>
0x000723        E1F00379                 call $error;

 <$M.timer.schedule_event_at.insert_here>
0x000724        D5360000                 M[r4 + 0] = r1;
0x000725        D5230000                 M[r1 + 0] = r0;
0x000726        D5430001                 M[r1 + 1] = r2;
0x000727        D5530002                 M[r1 + 2] = r3;
0x000728        095005E1                 r3 = Null + M[$timer.id];
0x000729        D5530003                 M[r1 + 3] = r3;
0x00072A        E425002F                 r0 = r3 + 1;
0x00072B        20200050                 if EQ r0 = Null - r3;
0x00072C        192005E1                 M[$timer.id] = r0 + Null;
0x00072D        0900FE1F                 Null = Null + M[0xfffe1f];
0x00072E        DD000003                 if EQ jump $M.timer.schedule_event_at.no_current_timer_set;
0x00072F        2904FE21                 Null = r2 - M[0xfffe21];
0x000730        DD500004                 if POS jump $M.timer.schedule_event_at.done;

 <$M.timer.schedule_event_at.no_current_timer_set>
0x000731        1940FE21                 M[0xfffe21] = r2 + Null;
0x000732        E420002F                 r0 = Null + 1;
0x000733        1920FE1F                 M[0xfffe1f] = r0 + Null;

 <$M.timer.schedule_event_at.done>
0x000734        E1F00209                 call $interrupt.unblock;
0x000735        DDF00263                 jump $pop_rLink_and_rts;

 <$cbuffer.calc_amount_space.its_a_port>
0x000736        8132001F                 r1 = r0 AND 0x1f;
0x000737        2133000C                 r1 = r1 - 12;
0x000738        FD0000FF D1433549        r2 = M[r1 + -51895];
0x00073A        00200000                 if EQ r0 = Null + Null;
0x00073B        DC0D0000                 if EQ rts;
0x00073C        F3500000                 push r3;
0x00073D        D054000F                 r3 = M[r2 + Null];
0x00073E        D143051A                 r2 = M[r1 + 1306];
0x00073F        D3400000                 r2 = M[r2 + Null];
0x000740        23540000                 r3 = r3 - r2;
0x000741        FD0000FF D1433162        r2 = M[r1 + -52894];
0x000743        E434003F                 r1 = r2 - 1;
0x000744        8035003F                 r1 = r3 AND r1;
0x000745        00340000                 if EQ r1 = r2 + Null;
0x000746        E433003F                 r1 = r1 - 1;
0x000747        F3540000                 pop r3;
0x000748        FD000003 81228000        r0 = r0 AND 0x38000;
0x00074A        DD00000F                 if EQ jump $M.cbuffer.calc_amount_space.its_a_port.port_width_16bit;
0x00074B        FD000001 21028000        Null = r0 - 98304;
0x00074D        DD00000C                 if EQ jump $M.cbuffer.calc_amount_space.its_a_port.port_width_16bit;
0x00074E        DD400009                 if NEG jump $M.cbuffer.calc_amount_space.its_a_port.port_width_8bit;
0x00074F        FD000002 21028000        Null = r0 - 163840;
0x000751        DD000003                 if EQ jump $M.cbuffer.calc_amount_space.its_a_port.port_width_24bit;

 <$M.cbuffer.calc_amount_space.its_a_port.port_width_32bit>
0x000752        9123007E                 r0 = r1 ASHIFT -2;
0x000753        DC0D000F                 rts;

 <$M.cbuffer.calc_amount_space.its_a_port.port_width_24bit>
0x000754        E423003F                 r0 = r1 - 1;
0x000755        95222AAB                 r0 = r0 * 0.333343505859375 (frac);
0x000756        DC0D000F                 rts;

 <$M.cbuffer.calc_amount_space.its_a_port.port_width_8bit>
0x000757        0023000F                 r0 = r1 + Null;
0x000758        DC0D000F                 rts;

 <$M.cbuffer.calc_amount_space.its_a_port.port_width_16bit>
0x000759        9123007F                 r0 = r1 ASHIFT -1;
0x00075A        DC0D000F                 rts;

 <$cbuffer.calc_amount_data.its_a_port>
0x00075B        8132001F                 r1 = r0 AND 0x1f;
0x00075C        FD0000FF D143353D        r2 = M[r1 + -51907];
0x00075E        00200000                 if EQ r0 = Null + Null;
0x00075F        DC0D0000                 if EQ rts;
0x000760        F3200000                 push r0;
0x000761        D3400000                 r2 = M[r2 + Null];
0x000762        D123050E                 r0 = M[r1 + 1294];
0x000763        D3200000                 r0 = M[r0 + Null];
0x000764        2024002F                 r0 = r2 - r0;
0x000765        FD0000FF D1433156        r2 = M[r1 + -52906];
0x000767        E434003F                 r1 = r2 - 1;
0x000768        8032003F                 r1 = r0 AND r1;

 <$cbuffer.calc_amount_data.convert_size>
0x000769        F3240000                 pop r0;

 <$M.cbuffer.calc_amount_data.its_a_port.convert>
0x00076A        FD000003 81228000        r0 = r0 AND 0x38000;
0x00076C        DD00000F                 if EQ jump $M.cbuffer.calc_amount_data.its_a_port.port_width_16bit;
0x00076D        FD000001 21028000        Null = r0 - 98304;
0x00076F        DD00000C                 if EQ jump $M.cbuffer.calc_amount_data.its_a_port.port_width_16bit;
0x000770        DD400009                 if NEG jump $M.cbuffer.calc_amount_data.its_a_port.port_width_8bit;
0x000771        FD000002 21028000        Null = r0 - 163840;
0x000773        DD000003                 if EQ jump $M.cbuffer.calc_amount_data.its_a_port.port_width_24bit;

 <$M.cbuffer.calc_amount_data.its_a_port.port_width_32bit>
0x000774        9123007E                 r0 = r1 ASHIFT -2;
0x000775        DC0D000F                 rts;

 <$M.cbuffer.calc_amount_data.its_a_port.port_width_24bit>
0x000776        E423003F                 r0 = r1 - 1;
0x000777        95222AAB                 r0 = r0 * 0.333343505859375 (frac);
0x000778        DC0D000F                 rts;

 <$M.cbuffer.calc_amount_data.its_a_port.port_width_8bit>
0x000779        0023000F                 r0 = r1 + Null;
0x00077A        DC0D000F                 rts;

 <$M.cbuffer.calc_amount_data.its_a_port.port_width_16bit>
0x00077B        9123007F                 r0 = r1 ASHIFT -1;
0x00077C        DC0D000F                 rts;
...

 <$pskey.result_message_handler>
0x00079D        FD000000 21028008        Null = r0 - 32776;
0x00079F        DD000003                 if EQ jump $M.pskey.result_message_handler.failure;
0x0007A0        D035000F                 r1 = M[r3 + Null];
0x0007A1        DDF00002                 jump $M.pskey.result_message_handler.ready;

 <$M.pskey.result_message_handler.failure>
0x0007A2        E440003F                 r2 = Null - 1;

 <$M.pskey.result_message_handler.ready>
0x0007A3        190005E0                 M[$pskey.request_in_progress] = Null + Null;
0x0007A4        FD0000FF 017035E0        r5 = Null + -51744;
0x0007A6        FD0000FF 092035E0        r0 = Null + M[$pskey.last_addr];

 <$M.pskey.result_message_handler.find_structure_loop>
0x0007A8        D1620001                 r4 = M[r0 + 1];
0x0007A9        2003006F                 Null = r1 - r4;
0x0007AA        DD000006                 if EQ jump $M.pskey.result_message_handler.structure_found;
0x0007AB        0072000F                 r5 = r0 + Null;
0x0007AC        D1220000                 r0 = M[r0 + 0];
0x0007AD        E402002F                 Null = r0 + 1;
0x0007AE        DD10FFFA                 if NE jump $M.pskey.result_message_handler.find_structure_loop;
0x0007AF        DC0D000F                 rts;

 <$M.pskey.result_message_handler.structure_found>
0x0007B0        F3D00000                 push rLink;
0x0007B1        D1620000                 r4 = M[r0 + 0];
0x0007B2        D5670000                 M[r5 + 0] = r4;
0x0007B3        D1D20002                 rLink = M[r0 + 2];
0x0007B4        E00D000F                 call rLink;
0x0007B5        FD0000FF 093035E0        r1 = Null + M[$pskey.last_addr];
0x0007B7        E403002F                 Null = r1 + 1;
0x0007B8        E110001A                 if NE call $pskey.private.send_request;
0x0007B9        DDF001DF                 jump $pop_rLink_and_rts;

 <$message.send_short>
0x0007BA        F3D00000                 push rLink;
0x0007BB        E1F001AE                 call $block_interrupts;
0x0007BC        FD0000FF 093035DE        r1 = Null + M[$message.queue_write_ptr];
0x0007BE        01230005                 r0 = r1 + 5;
0x0007BF        2102006E                 Null = r0 - 110;
0x0007C0        00200000                 if EQ r0 = Null + Null;
0x0007C1        290205DE                 Null = r0 - M[$message.queue_read_ptr];
0x0007C2        DD00000E                 if EQ jump $M.message.send_short.all_done;
0x0007C3        FD0000FF 192035DE        M[$message.queue_write_ptr] = r0 + Null;
0x0007C5        FD0000FF D543330E        M[r1 + -52466] = r2;
0x0007C7        FD0000FF D553330F        M[r1 + -52465] = r3;
0x0007C9        FD0000FF D5633310        M[r1 + -52464] = r4;
0x0007CB        FD0000FF D5733311        M[r1 + -52463] = r5;
0x0007CD        FD0000FF D5833312        M[r1 + -52462] = r6;
0x0007CF        E1F0FE81                 call $message.private.try_to_send_message;

 <$M.message.send_short.all_done>
0x0007D0        E1F0016D                 call $interrupt.unblock;
0x0007D1        DDF001C7                 jump $pop_rLink_and_rts;

 <$pskey.private.send_request>
0x0007D2        090005E0                 Null = Null + M[$pskey.request_in_progress];
0x0007D3        DC0D0001                 if NE rts;
0x0007D4        F3D00000                 push rLink;
0x0007D5        094005BD                 r2 = Null + M[0x5bd];
0x0007D6        E1F0003F                 call $timer.cancel_event;
0x0007D7        E1F0019B                 call $message.send_queue_space;
0x0007D8        21020005                 Null = r0 - 5;
0x0007D9        DD400009                 if NEG jump $M.pskey.private.send_request.try_to_send_later;
0x0007DA        FD0000FF 093035E0        r1 = Null + M[$pskey.last_addr];
0x0007DC        85408006                 r2 = Null OR 0x8006;
0x0007DD        D1530001                 r3 = M[r1 + 1];
0x0007DE        E1F0FFDC                 call $message.send_short;
0x0007DF        E420002F                 r0 = Null + 1;
0x0007E0        192005E0                 M[$pskey.request_in_progress] = r0 + Null;
0x0007E1        DDF001B7                 jump $pop_rLink_and_rts;

 <$M.pskey.private.send_request.try_to_send_later>
0x0007E2        013005BA                 r1 = Null + 1466;
0x0007E3        01402710                 r2 = Null + 10000;
0x0007E4        015007D2                 r3 = Null + 2002;
0x0007E5        E1F001AF                 call $timer.schedule_event_in;
0x0007E6        DDF001B2                 jump $pop_rLink_and_rts;

 <$timer.service_routine>
0x0007E7        F3D00000                 push rLink;

 <$M.timer.service_routine.search_again>
0x0007E8        FD0000FF 093035E1        r1 = Null + M[$timer.last_addr];
0x0007EA        E403002F                 Null = r1 + 1;
0x0007EB        DD000012                 if EQ jump $M.timer.service_routine.no_more_timers;
0x0007EC        D1230001                 r0 = M[r1 + 1];
0x0007ED        2942FE71                 r2 = r0 - M[0xfffe71];
0x0007EE        21040000                 Null = r2 - 0;
0x0007EF        DDC00009                 if GT jump $M.timer.service_routine.setup_a_new_hardware_timer;
0x0007F0        D1D30002                 rLink = M[r1 + 2];
0x0007F1        D1230003                 r0 = M[r1 + 3];
0x0007F2        D5030003                 M[r1 + 3] = Null;
0x0007F3        D1430000                 r2 = M[r1 + 0];
0x0007F4        FD0000FF 194035E1        M[$timer.last_addr] = r2 + Null;
0x0007F6        E00D000F                 call rLink;
0x0007F7        DDF0FFF1                 jump $M.timer.service_routine.search_again;

 <$M.timer.service_routine.setup_a_new_hardware_timer>
0x0007F8        1900FE1F                 M[0xfffe1f] = Null + Null;
0x0007F9        1920FE21                 M[0xfffe21] = r0 + Null;
0x0007FA        E450002F                 r3 = Null + 1;
0x0007FB        1950FE1F                 M[0xfffe1f] = r3 + Null;
0x0007FC        DDF0019C                 jump $pop_rLink_and_rts;

 <$M.timer.service_routine.no_more_timers>
0x0007FD        1900FE1F                 M[0xfffe1f] = Null + Null;
0x0007FE        DDF0019A                 jump $pop_rLink_and_rts;

 <$frame_sync.update_streams_ind>
0x0007FF        F3D00000                 push rLink;
0x000800        51900001                 M1 = Null + 1;
0x000801        E1F00168                 call $block_interrupts;

 <$M.frame_sync.update_streams_ind.jp_next_stream>
0x000802        D0B9000F                 r9 = M[r7 + Null];
0x000803        DD00000F                 if EQ jump $M.frame_sync.update_streams_ind.jp_stream_done;
0x000804        D14B0006                 r2 = M[r9 + 6];
0x000805        D12B0000                 r0 = M[r9 + 0];
0x000806        D1320000                 r1 = M[r0 + 0];
0x000807        D16B0003                 r4 = M[r9 + 3];
0x000808        50D0003F                 L1 = Null + r1;
0x000809        E004000F                 call r2;
0x00080A        5080006F                 M0 = Null + r4;
0x00080B        D042000F                 r2 = M[r0 + Null];
0x00080C        5010004F                 I1 = Null + r2;
0x00080D        02003400                 Null = Null + Null, r1 = M[I1,M0];
0x00080E        4440001F                 r2 = Null + I1;
0x00080F        1824000F                 M[r0] = r2 + Null;
0x000810        E499002F                 r7 = r7 + 1;
0x000811        DDF0FFF1                 jump $M.frame_sync.update_streams_ind.jp_next_stream;

 <$M.frame_sync.update_streams_ind.jp_stream_done>
0x000812        E1F0012B                 call $interrupt.unblock;
0x000813        50D0000F                 L1 = Null + Null;
0x000814        DDF00184                 jump $pop_rLink_and_rts;

 <$timer.cancel_event>
0x000815        F3D00000                 push rLink;
0x000816        E1F00153                 call $block_interrupts;
0x000817        01C00032                 r10 = Null + 50;
0x000818        FD0000FF 016035E1        r4 = Null + -51743;
0x00081A        FD0000FF 092035E1        r0 = Null + M[$timer.last_addr];
0x00081C        E5F00008                 do $M.timer.cancel_event.loop;
0x00081D        E402002F                 Null = r0 + 1;
0x00081E        DD000006                 if EQ jump $M.timer.cancel_event.loop;
0x00081F        D1720003                 r5 = M[r0 + 3];
0x000820        2004007F                 Null = r2 - r5;
0x000821        DD000004                 if EQ jump $M.timer.cancel_event.delete_this_entry;
0x000822        0062000F                 r4 = r0 + Null;
0x000823        D1220000                 r0 = M[r0 + 0];

 <$M.timer.cancel_event.loop>
0x000824        DDF00004                 jump $M.timer.cancel_event.done;

 <$M.timer.cancel_event.delete_this_entry>
0x000825        D1320000                 r1 = M[r0 + 0];
0x000826        D5360000                 M[r4 + 0] = r1;
0x000827        D5020003                 M[r0 + 3] = Null;

 <$M.timer.cancel_event.done>
0x000828        E1F00115                 call $interrupt.unblock;
0x000829        DDF0016F                 jump $pop_rLink_and_rts;

 <$frame_sync.analyze_stream_ind>
0x00082A        D5CB0008                 M[r9 + 8] = r10;
0x00082B        D14B000A                 r2 = M[r9 + 10];
0x00082C        200400CF                 Null = r2 - r10;
0x00082D        004C0005                 if POS r2 = r10 + Null;
0x00082E        D15B000B                 r3 = M[r9 + 11];
0x00082F        200500CF                 Null = r3 - r10;
0x000830        005C0004                 if NEG r3 = r10 + Null;
0x000831        D1CB0007                 r10 = M[r9 + 7];
0x000832        67C90000                 r10 = r10 - M1;
0x000833        DDD00005                 if LE jump $M.frame_sync.analyze_stream_ind.jp_threshold_reset;
0x000834        D54B000A                 M[r9 + 10] = r2;
0x000835        D55B000B                 M[r9 + 11] = r3;
0x000836        D5CB0007                 M[r9 + 7] = r10;
0x000837        DC0D000F                 rts;

 <$M.frame_sync.analyze_stream_ind.jp_threshold_reset>
0x000838        D50B000B                 M[r9 + 11] = Null;
0x000839        D56B000A                 M[r9 + 10] = r4;
0x00083A        D1CB0004                 r10 = M[r9 + 4];
0x00083B        23540000                 r3 = r3 - r2;
0x00083C        035C0000                 r3 = r3 + r10;
0x00083D        00500004                 if NEG r3 = Null + Null;
0x00083E        D55B0009                 M[r9 + 9] = r3;
0x00083F        01C00078                 r10 = Null + 120;
0x000840        D5CB0007                 M[r9 + 7] = r10;
0x000841        DC0D000F                 rts;

 <$reset_iir_resampler>
0x000842        0200C800                 Null = Null + Null, M[I2,M0] = r2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000843        02005C00                 Null = Null + Null, r3 = M[I3,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000844        02002C00                 Null = Null + Null, r0 = M[I3,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000845        0200C800                 Null = Null + Null, M[I2,M0] = r2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000846        0200E800                 Null = Null + Null, M[I2,M0] = r4;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000847        5000006F                 I0 = Null + r4;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000848        00C5000F                 r10 = r3 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000849        03650000                 r4 = r4 + r3;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00084A        0036E80F                 r1 = r4 + Null, M[I2,M0] = r4;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00084B        03620000                 r4 = r4 + r0;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00084C        E5F00002                 do MB6glZIH5Sapay5ynsJj0TsF8LY53+/z4ry0ORqo0Lc=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00084D        0300C100                 Null = Null + Null, M[I0,1] = r2;

 <MB6glZIH5Sapay5ynsJj0TsF8LY53+/z4ry0ORqo0Lc=>
0x00084E        59330004                 I3 = I3 + 4;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00084F        00C2000F                 r10 = r0 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000850        DC0D0000                 if EQ rts;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000851        59330002                 I3 = I3 + 2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000852        F2D03C00                 push rLink, r1 = M[I3,M0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000853        21330002                 r1 = r1 - 2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000854        E003000F                 call r1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000855        5B330000                 I3 = I3 + r1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000856        E5F00002                 do 03vUYV5czIhPHTLKF96SQC9J3H+LEgbvP+nQF+jFgCY=;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000857        0300C100                 Null = Null + Null, M[I0,1] = r2;

 <03vUYV5czIhPHTLKF96SQC9J3H+LEgbvP+nQF+jFgCY=>
0x000858        DDF00140                 jump $pop_rLink_and_rts;

 <$wall_clock.disable>
0x000859        F3D00000                 push rLink;
0x00085A        E1F0010F                 call $block_interrupts;
0x00085B        01C00007                 r10 = Null + 7;
0x00085C        012005E2                 r0 = Null + 1506;
0x00085D        094005E2                 r2 = Null + M[$wall_clock.last_addr];
0x00085E        E5F00007                 do $M.wall_clock.disable.loop;
0x00085F        E404002F                 Null = r2 + 1;
0x000860        DD000005                 if EQ jump $M.wall_clock.disable.loop;
0x000861        2004003F                 Null = r2 - r1;
0x000862        DD000004                 if EQ jump $M.wall_clock.disable.delete_this_entry;
0x000863        0024000F                 r0 = r2 + Null;
0x000864        D1440000                 r2 = M[r2 + 0];

 <$M.wall_clock.disable.loop>
0x000865        DDF00003                 jump $M.wall_clock.disable.entry_removed;

 <$M.wall_clock.disable.delete_this_entry>
0x000866        D1430000                 r2 = M[r1 + 0];
0x000867        D5420000                 M[r0 + 0] = r2;

 <$M.wall_clock.disable.entry_removed>
0x000868        D143000A                 r2 = M[r1 + 10];
0x000869        E1F0FFAC                 call $timer.cancel_event;
0x00086A        E1F000D3                 call $interrupt.unblock;
0x00086B        DDF0012D                 jump $pop_rLink_and_rts;

 <$frame_sync.distribute_streams_ind>
0x00086C        F3D00000                 push rLink;
0x00086D        E1F000FC                 call $block_interrupts;
0x00086E        51900001                 M1 = Null + 1;

 <$M.frame_sync.distribute_streams_ind.jp_next_stream>
0x00086F        D0B9000F                 r9 = M[r7 + Null];
0x000870        DD00000D                 if EQ jump $M.frame_sync.distribute_streams_ind.jp_stream_done;
0x000871        D15B0005                 r3 = M[r9 + 5];
0x000872        D12B0000                 r0 = M[r9 + 0];
0x000873        D1320000                 r1 = M[r0 + 0];
0x000874        D1820001                 r6 = M[r0 + 1];
0x000875        D1A20002                 r8 = M[r0 + 2];
0x000876        50D0003F                 L1 = Null + r1;
0x000877        D16B0003                 r4 = M[r9 + 3];
0x000878        D56B0002                 M[r9 + 2] = r4;
0x000879        E005000F                 call r3;
0x00087A        D58B0001                 M[r9 + 1] = r6;
0x00087B        E499002F                 r7 = r7 + 1;
0x00087C        DDF0FFF3                 jump $M.frame_sync.distribute_streams_ind.jp_next_stream;

 <$M.frame_sync.distribute_streams_ind.jp_stream_done>
0x00087D        E1F000C0                 call $interrupt.unblock;
0x00087E        50D0000F                 L1 = Null + Null;
0x00087F        DDF00119                 jump $pop_rLink_and_rts;

 <$frame_sync.update_output_streams_ind>
0x000880        F3D00000                 push rLink;
0x000881        D1820002                 r6 = M[r0 + 2];
0x000882        D1A20001                 r8 = M[r0 + 1];
0x000883        20C800AF                 r10 = r6 - r8;
0x000884        00CC0034                 if NEG r10 = r10 + r1;
0x000885        E1F0FFA5                 call $frame_sync.analyze_stream_ind;
0x000886        D15B0008                 r3 = M[r9 + 8];
0x000887        D14B0009                 r2 = M[r9 + 9];
0x000888        23540000                 r3 = r3 - r2;
0x000889        DD40000A                 if NEG jump $M.frame_sync.update_output_streams_ind.done;
0x00088A        D14B0004                 r2 = M[r9 + 4];
0x00088B        9144007F                 r2 = r2 ASHIFT -1;
0x00088C        03540000                 r3 = r3 + r2;
0x00088D        2006005F                 Null = r4 - r3;
0x00088E        00560004                 if NEG r3 = r4 + Null;
0x00088F        D14B000C                 r2 = M[r9 + 12];
0x000890        23450000                 r2 = r2 - r3;
0x000891        D54B000C                 M[r9 + 12] = r2;
0x000892        23650000                 r4 = r4 - r3;

 <$M.frame_sync.update_output_streams_ind.done>
0x000893        01220002                 r0 = r0 + 2;
0x000894        DDF00104                 jump $pop_rLink_and_rts;

 <$frame_sync.task_scheduler_isr>
0x000895        D19A0000                 r7 = M[r8 + 0];
0x000896        D1CA0002                 r10 = M[r8 + 2];
0x000897        510A000A                 I0 = r8 + 10;
0x000898        FD000040 01300000        r1 = Null + 4194304;
0x00089A        D14A0008                 r2 = M[r8 + 8];
0x00089B        E5F00005                 do $M.frame_sync.task_scheduler_isr.lp_sched;
0x00089C        03002200                 Null = Null + Null, r0 = M[I0,2];
0x00089D        2002009F                 Null = r0 - r7;
0x00089E        84440030                 if EQ r2 = r2 OR r1;
0x00089F        8D33007F                 r1 = r1 LSHIFT -1;

 <$M.frame_sync.task_scheduler_isr.lp_sched>
0x0008A0        D54A0008                 M[r8 + 8] = r2;
0x0008A1        E429002F                 r0 = r7 + 1;
0x0008A2        D13A0001                 r1 = M[r8 + 1];
0x0008A3        2002003F                 Null = r0 - r1;
0x0008A4        00200005                 if POS r0 = Null + Null;
0x0008A5        D52A0000                 M[r8 + 0] = r0;
0x0008A6        DC0D000F                 rts;

 <$rm_bluetooth_address_handler>
0x0008A7        F3D00000                 push rLink;
0x0008A8        8D330078                 r1 = r1 LSHIFT -8;
0x0008A9        FD0000FF 19303582        M[0xff3582] = r1 + Null;
0x0008AB        FD0000FF 19403583        M[0xff3583] = r2 + Null;
0x0008AD        FD0000FF 19503584        M[0xff3584] = r3 + Null;
0x0008AF        FD0000FF 19603585        M[0xff3585] = r4 + Null;
0x0008B1        FD0000FF 01303581        r1 = Null + -51839;
0x0008B3        D1030000                 Null = M[r1 + 0];
0x0008B4        E100003D                 if EQ call $wall_clock.enable;
0x0008B5        DDF000E3                 jump $pop_rLink_and_rts;

 <$sco_params_failed_handler>
0x0008B6        DC0D000F                 rts;

 <eU5PNvwblvA9dV4tAE5XanPExVJ9onEMg9OGSf7gy5w=>
0x0008B7        F3D00000                 push rLink;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0008B8        D12A0001                 r0 = M[r8 + 1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0008B9        E1F0F9D8                 call $cbops_multirate.GetTransferAmount;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0008BA        D14A0009                 r2 = M[r8 + 9];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0008BB        9464002F                 r4 = r2 * r0 (frac);

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0008BC        2062006F                 r4 = r0 - r4;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0008BD        21660002                 r4 = r4 - 2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0008BE        00600004                 if NEG r4 = Null + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0008BF        21320002                 r1 = r0 - 2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0008C0        00300004                 if NEG r1 = Null + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0008C1        2006003F                 Null = r4 - r1;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0008C2        00360004                 if NEG r1 = r4 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0008C3        D12A0000                 r0 = M[r8 + 0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0008C4        E1F0F9D5                 call $cbops_multirate.SetMinimumTransferAmount;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x0008C5        DDF000D3                 jump $pop_rLink_and_rts;

 <$wall_clock.timer_handler>
0x0008C6        F3D00000                 push rLink;
0x0008C7        21830007                 r6 = r1 - 7;
0x0008C8        03300000                 r1 = r1 + Null;
0x0008C9        FD000001 014086A0        r2 = Null + 100000;
0x0008CB        015008C6                 r3 = Null + 2246;
0x0008CC        E1F000C8                 call $timer.schedule_event_in;
0x0008CD        8540801B                 r2 = Null OR 0x801b;
0x0008CE        D1580001                 r3 = M[r6 + 1];
0x0008CF        D1680002                 r4 = M[r6 + 2];
0x0008D0        D1780003                 r5 = M[r6 + 3];
0x0008D1        D1880004                 r6 = M[r6 + 4];
0x0008D2        E1F0FEE8                 call $message.send_short;
0x0008D3        DDF000C5                 jump $pop_rLink_and_rts;

 <$frame_sync.sco_decoder.pcm.process>
0x0008D4        0074000F                 r5 = r2 + Null;
0x0008D5        81040002                 Null = r2 AND 0x2;
0x0008D6        DC0D0001                 if NE rts;
0x0008D7        F3D00000                 push rLink;
0x0008D8        D1290003                 r0 = M[r7 + 3];
0x0008D9        E1F000A5                 call $_cbuffer_get_write_address;
0x0008DA        5040002F                 I4 = Null + r0;
0x0008DB        00C8000F                 r10 = r6 + Null;
0x0008DC        50E0003F                 L4 = Null + r1;
0x0008DD        E5F00004                 do $M.frame_sync.sco_decoder.pcm.process.lp_copy;
0x0008DE        03002100                 Null = Null + Null, r0 = M[I0,1];
0x0008DF        91220008                 r0 = r0 ASHIFT 8;
0x0008E0        030000A1                 Null = Null + Null, M[I4,1] = r0;

 <$M.frame_sync.sco_decoder.pcm.process.lp_copy>
0x0008E1        50E0000F                 L4 = Null + Null;
0x0008E2        DDF000B6                 jump $pop_rLink_and_rts;

 <$cbuffer.set_write_address.its_a_port>
0x0008E3        F3D00000                 push rLink;
0x0008E4        8122001F                 r0 = r0 AND 0x1f;
0x0008E5        2122000C                 r0 = r0 - 12;
0x0008E6        0900FE33                 Null = Null + M[0xfffe33];
0x0008E7        090005DB                 Null = Null + M[$cbuffer.auto_mcu_message];
0x0008E8        DD000008                 if EQ jump $M.cbuffer.set_write_address.its_a_port.dont_message_send;
0x0008E9        FD0000FF D1323549        r1 = M[r0 + -51895];
0x0008EB        2103F000                 Null = r1 - -4096;
0x0008EC        DD500004                 if POS jump $M.cbuffer.set_write_address.its_a_port.dont_message_send;
0x0008ED        85408003                 r2 = Null OR 0x8003;
0x0008EE        ED520001                 r3 = 0x1 ASHIFT r0;
0x0008EF        E1F0FECB                 call $message.send_short;

 <$M.cbuffer.set_write_address.its_a_port.dont_message_send>
0x0008F0        DDF000A8                 jump $pop_rLink_and_rts;

 <$wall_clock.enable>
0x0008F1        F3D00000                 push rLink;
0x0008F2        E1F00077                 call $block_interrupts;
0x0008F3        092005E2                 r0 = Null + M[$wall_clock.last_addr];
0x0008F4        D5230000                 M[r1 + 0] = r0;
0x0008F5        193005E2                 M[$wall_clock.last_addr] = r1 + Null;
0x0008F6        01330007                 r1 = r1 + 7;
0x0008F7        01400000                 r2 = Null + 0;
0x0008F8        015008C6                 r3 = Null + 2246;
0x0008F9        E1F0009B                 call $timer.schedule_event_in;
0x0008FA        E1F00043                 call $interrupt.unblock;
0x0008FB        DDF0009D                 jump $pop_rLink_and_rts;

 <$cbuffer.set_read_address.its_a_port>
0x0008FC        F3D00000                 push rLink;
0x0008FD        8152001F                 r3 = r0 AND 0x1f;
0x0008FE        0900FE33                 Null = Null + M[0xfffe33];
0x0008FF        090005DB                 Null = Null + M[$cbuffer.auto_mcu_message];
0x000900        DD000008                 if EQ jump $M.cbuffer.set_read_address.its_a_port.dont_message_send;
0x000901        FD0000FF D135353D        r1 = M[r3 + -51907];
0x000903        2103F000                 Null = r1 - -4096;
0x000904        DD500004                 if POS jump $M.cbuffer.set_read_address.its_a_port.dont_message_send;
0x000905        85408002                 r2 = Null OR 0x8002;
0x000906        ED550001                 r3 = 0x1 ASHIFT r3;
0x000907        E1F0FEB3                 call $message.send_short;

 <$M.cbuffer.set_read_address.its_a_port.dont_message_send>
0x000908        DDF00090                 jump $pop_rLink_and_rts;

 <$frame_sync.distribute_read_insert_ind>
0x000909        20C000CF                 r10 = Null - r10;
0x00090A        D14B0004                 r2 = M[r9 + 4];
0x00090B        9144007F                 r2 = r2 ASHIFT -1;
0x00090C        03C40000                 r10 = r10 + r2;
0x00090D        D14B000C                 r2 = M[r9 + 12];
0x00090E        034C0000                 r2 = r2 + r10;
0x00090F        D54B000C                 M[r9 + 12] = r2;
0x000910        5010008F                 I1 = Null + r6;
0x000911        03004700                 Null = Null + Null, r2 = M[I1,-1];
0x000912        E5F00002                 do $M.frame_sync.distribute_read_insert_ind.lp_repeat;
0x000913        0300C700                 Null = Null + Null, M[I1,-1] = r2;

 <$M.frame_sync.distribute_read_insert_ind.lp_repeat>
0x000914        03004500                 Null = Null + Null, r2 = M[I1,1];
0x000915        4480001F                 r6 = Null + I1;
0x000916        D5820001                 M[r0 + 1] = r6;
0x000917        DC0D000F                 rts;

 <$frame_sync.update_input_streams_ind>
0x000918        D15B0008                 r3 = M[r9 + 8];
0x000919        D14B0009                 r2 = M[r9 + 9];
0x00091A        23540000                 r3 = r3 - r2;
0x00091B        DD400008                 if NEG jump $M.frame_sync.update_input_streams_ind.done;
0x00091C        D14B0004                 r2 = M[r9 + 4];
0x00091D        9144007F                 r2 = r2 ASHIFT -1;
0x00091E        03540000                 r3 = r3 + r2;
0x00091F        D14B000C                 r2 = M[r9 + 12];
0x000920        23450000                 r2 = r2 - r3;
0x000921        D54B000C                 M[r9 + 12] = r2;
0x000922        03650000                 r4 = r4 + r3;

 <$M.frame_sync.update_input_streams_ind.done>
0x000923        E422002F                 r0 = r0 + 1;
0x000924        DC0D000F                 rts;

 <$frame_sync.distribute_output_stream_ind>
0x000925        501000AF                 I1 = Null + r8;
0x000926        238A0000                 r6 = r6 - r8;
0x000927        0088003D                 if LE r6 = r6 + r1;
0x000928        67890000                 r6 = r6 - M1;
0x000929        70A8006F                 M2 = r6 - r4;
0x00092A        DD500004                 if POS jump $M.frame_sync.distribute_output_stream_ind.done;
0x00092B        444000AF                 r2 = Null + M2;
0x00092C        D54B000C                 M[r9 + 12] = r2;
0x00092D        02004600                 Null = Null + Null, r2 = M[I1,M2];

 <$M.frame_sync.distribute_output_stream_ind.done>
0x00092E        4480001F                 r6 = Null + I1;
0x00092F        D5820002                 M[r0 + 2] = r6;
0x000930        DC0D000F                 rts;

 <$cbops.copy_op.amount_to_use>
0x000931        D12A0000                 r0 = M[r8 + 0];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000932        D13A0001                 r1 = M[r8 + 1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000933        01990002                 r7 = r7 + 2;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000934        99220003                 r0 = r0 * 3 (int);

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000935        03290000                 r0 = r0 + r7;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000936        99330003                 r1 = r1 * 3 (int);

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000937        03390000                 r1 = r1 + r7;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000938        D042000F                 r2 = M[r0 + Null];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x000939        2804003F                 Null = r2 - M[r1];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00093A        D0430005                 if POS r2 = M[r1 + Null];

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00093B        1824000F                 M[r0] = r2 + Null;

 <gnPnOw/1/6LF5J1pQiiXgbv04SNxr6qGs0j2iKTJyNI=>
0x00093C        DC0D000F                 rts;

 <$interrupt.unblock>
0x00093D        FD0000FF 092035DC        r0 = Null + M[$interrupt.block_count];
0x00093F        E100015D                 if EQ call $error;
0x000940        E422003F                 r0 = r0 - 1;
0x000941        FD0000FF 192035DC        M[$interrupt.block_count] = r0 + Null;
0x000943        DC0D0001                 if NE rts;
0x000944        E420002F                 r0 = Null + 1;
0x000945        1920FE12                 M[0xfffe12] = r0 + Null;
0x000946        DC0D000F                 rts;

 <$frame_sync.run_function_table>
0x000947        F3D00000                 push rLink;

 <$M.frame_sync.run_function_table.lp_proc_loop>
0x000948        D076000F                 r5 = M[r4 + Null];
0x000949        DD00004F                 if EQ jump $pop_rLink_and_rts;
0x00094A        D1960001                 r7 = M[r4 + 1];
0x00094B        D1A60002                 r8 = M[r4 + 2];
0x00094C        01660003                 r4 = r4 + 3;
0x00094D        F3600000                 push r4;
0x00094E        E007000F                 call r5;
0x00094F        F3640000                 pop r4;
0x000950        DDF0FFF8                 jump $M.frame_sync.run_function_table.lp_proc_loop;

 <$cbuffer.calc_amount_space>
0x000951        D802000F                 Null = SIGNDET r0;
0x000952        DD00FDE4                 if EQ jump $cbuffer.calc_amount_space.its_a_port;

 <$M.cbuffer.calc_amount_space.its_a_cbuffer>
0x000953        D1420000                 r2 = M[r0 + 0];
0x000954        D1320002                 r1 = M[r0 + 2];
0x000955        D1220001                 r0 = M[r0 + 1];
0x000956        23230000                 r0 = r0 - r1;
0x000957        0022004D                 if LE r0 = r0 + r2;
0x000958        E422003F                 r0 = r0 - 1;
0x000959        DC0D000F                 rts;

 <$frame_sync.distribute_input_stream_ind>
0x00095A        F3D00000                 push rLink;
0x00095B        23A80000                 r8 = r8 - r6;
0x00095C        00AA0034                 if NEG r8 = r8 + r1;
0x00095D        20CA006F                 r10 = r8 - r4;
0x00095E        E140FFAB                 if NEG call $frame_sync.distribute_read_insert_ind;
0x00095F        E1F0FECB                 call $frame_sync.analyze_stream_ind;
0x000960        DDF00038                 jump $pop_rLink_and_rts;

 <$cbuffer.calc_amount_data>
0x000961        D802000F                 Null = SIGNDET r0;
0x000962        DD00FDF9                 if EQ jump $cbuffer.calc_amount_data.its_a_port;

 <$M.cbuffer.calc_amount_data.its_a_cbuffer>
0x000963        D1420000                 r2 = M[r0 + 0];
0x000964        D1320002                 r1 = M[r0 + 2];
0x000965        D1220001                 r0 = M[r0 + 1];
0x000966        2023002F                 r0 = r1 - r0;
0x000967        00220044                 if NEG r0 = r0 + r2;
0x000968        DC0D000F                 rts;

 <$block_interrupts>
0x000969        FD0000FF 092035DC        r0 = Null + M[$interrupt.block_count];
0x00096B        E422002F                 r0 = r0 + 1;
0x00096C        FD0000FF 192035DC        M[$interrupt.block_count] = r0 + Null;
0x00096E        1900FE12                 M[0xfffe12] = Null + Null;
0x00096F        03000000                 Null = Null + Null;
0x000970        03000000                 Null = Null + Null;
0x000971        DC0D000F                 rts;

 <$message.send_queue_space>
0x000972        092005DE                 r0 = Null + M[$message.queue_read_ptr];
0x000973        FD0000FF 292235DE        r0 = r0 - M[$message.queue_write_ptr];
0x000975        E422003F                 r0 = r0 - 1;
0x000976        DC0D0005                 if POS rts;
0x000977        0122006E                 r0 = r0 + 110;
0x000978        DC0D000F                 rts;

 <$_cbuffer_get_read_address>
0x000979        D802000F                 Null = SIGNDET r0;
0x00097A        DD00FD73                 if EQ jump $cbuffer.get_read_address_and_size.its_a_port;

 <$M.cbuffer.get_read_address_and_size.its_a_cbuffer>
0x00097B        D1320000                 r1 = M[r0 + 0];
0x00097C        D1220001                 r0 = M[r0 + 1];
0x00097D        DC0D000F                 rts;

 <$_cbuffer_get_write_address>
0x00097E        D802000F                 Null = SIGNDET r0;
0x00097F        DD00FD46                 if EQ jump $cbuffer.get_write_address_and_size.its_a_port;

 <$M.cbuffer.get_write_address_and_size.its_a_cbuffer>
0x000980        D1320000                 r1 = M[r0 + 0];
0x000981        D1220002                 r0 = M[r0 + 2];
0x000982        DC0D000F                 rts;

 <$frmbuffer.get_buffer>
0x000983        D1520002                 r3 = M[r0 + 2];
0x000984        D1420000                 r2 = M[r0 + 0];
0x000985        D1220001                 r0 = M[r0 + 1];
0x000986        D1340000                 r1 = M[r2 + 0];
0x000987        DC0D000F                 rts;

 <$cbuffer.set_read_address>
0x000988        D802000F                 Null = SIGNDET r0;
0x000989        DD00FF73                 if EQ jump $cbuffer.set_read_address.its_a_port;

 <$M.cbuffer.set_read_address.its_a_cbuffer>
0x00098A        D5320001                 M[r0 + 1] = r1;
0x00098B        DC0D000F                 rts;

 <$cbuffer.set_write_address>
0x00098C        D802000F                 Null = SIGNDET r0;
0x00098D        DD00FF56                 if EQ jump $cbuffer.set_write_address.its_a_port;

 <$M.cbuffer.set_write_address.its_a_cbuffer>
0x00098E        D5320002                 M[r0 + 2] = r1;
0x00098F        DC0D000F                 rts;

 <$frame_sync.sco_decoder.pcm.validate>
0x000990        0038000F                 r1 = r6 + Null;
0x000991        2002008F                 Null = r0 - r6;
0x000992        00300004                 if NEG r1 = Null + Null;
0x000993        DC0D000F                 rts;

 <$timer.schedule_event_in>
0x000994        0944FE71                 r2 = r2 + M[0xfffe71];
0x000995        DDF0FD7F                 jump $timer.schedule_event_at;

 <$frmbuffer.set_frame_size>
0x000996        D5520002                 M[r0 + 2] = r3;
0x000997        DC0D000F                 rts;

 <$pop_rLink_and_rts>
0x000998        F3D40000                 pop rLink;
0x000999        DC0D000F                 rts;

 <$wall_clock.message_handler_failed>
0x00099A        DC0D000F                 rts;

 <$main>
0x00099B        E1F000F0                 call $stack.initialise;
0x00099C        E1F000E2                 call $interrupt.initialise;
0x00099D        E1F00105                 call $message.initialise;
0x00099E        E1F000F8                 call $cbuffer.initialise;
0x00099F        E1F000C8                 call $pskey.initialise;
0x0009A0        E1F000D3                 call $wall_clock.initialise;
0x0009A1        01A003DF                 r8 = Null + 991;
0x0009A2        E1F00073                 call $sco_timing.initialize;
0x0009A3        FD000000 01408000        r2 = Null + 32768;
0x0009A5        E1F0FE15                 call $message.send_short;
0x0009A6        FD0000FF 013033F8        r1 = Null + -52232;
0x0009A8        01401026                 r2 = Null + 4134;
0x0009A9        015009FB                 r3 = Null + 2555;
0x0009AA        E1F000B0                 call $message.register_handler;
0x0009AB        013005AE                 r1 = Null + 1454;
0x0009AC        01400271                 r2 = Null + 625;
0x0009AD        015009D4                 r3 = Null + 2516;
0x0009AE        E1F0FFE6                 call $timer.schedule_event_in;

 <$M.main.main_loop>
0x0009AF        FD0000FF 01A03565        r8 = Null + -51867;
0x0009B1        E1F0FC07                 call $frame_sync.task_scheduler_run;
0x0009B2        DDF0FFFD                 jump $M.main.main_loop;

 <$main_housekeeping>
0x0009B3        F3D00000                 push rLink;
0x0009B4        DDF0FFE4                 jump $pop_rLink_and_rts;

 <$main_receive>
0x0009B5        F3D00000                 push rLink;
0x0009B6        FD0000FF 090035D8        Null = Null + M[$one_mic_example.reinit];
0x0009B8        E1100056                 if NE call $one_mic_example_reinitialize;
0x0009B9        019003DF                 r7 = Null + 991;
0x0009BA        E1F0F9DE                 call ALrYtClmXhG4b8GdfG6yhcsEkwc5+93FLGi1D2oh5B0=;
0x0009BB        FD0000FF 092035D7        r0 = Null + M[$one_mic_example.sys_mode];
0x0009BD        D16203FE                 r4 = M[r0 + 1022];
0x0009BE        E1F0FF89                 call $frame_sync.run_function_table;
0x0009BF        DDF0FFD9                 jump $pop_rLink_and_rts;

 <$main_send>
0x0009C0        F3D00000                 push rLink;
0x0009C1        0920FE71                 r0 = Null + M[0xfffe71];
0x0009C2        F3200000                 push r0;
0x0009C3        1900FE93                 M[0xfffe93] = Null + Null;
0x0009C4        FD0000FF 090035D8        Null = Null + M[$one_mic_example.reinit];
0x0009C6        E1100048                 if NE call $one_mic_example_reinitialize;
0x0009C7        FD0000FF 092035D7        r0 = Null + M[$one_mic_example.sys_mode];
0x0009C9        FD0000FF D16235D5        r4 = M[r0 + -51755];
0x0009CB        E1F0FF7C                 call $frame_sync.run_function_table;
0x0009CC        F3240000                 pop r0;
0x0009CD        2922FE71                 r0 = r0 - M[0xfffe71];
0x0009CE        FD0000FF 0930356B        r1 = Null + M[0xff356b];
0x0009D0        23320000                 r1 = r1 - r0;
0x0009D1        FD0000FF 1930356B        M[0xff356b] = r1 + Null;
0x0009D3        DDF0FFC5                 jump $pop_rLink_and_rts;

 <$audio_copy_handler>
0x0009D4        F3D00000                 push rLink;
0x0009D5        FD0000FF 01A035A1        r8 = Null + -51807;
0x0009D7        E1F0F748                 call ALrYtClmXhG4b8GdfG6yhcsEkwc5+93FLGi1D2oh5B0=;
0x0009D8        01A00597                 r8 = Null + 1431;
0x0009D9        E1F0F852                 call $cbops_multirate.copy;
0x0009DA        FD0000FF 01A035AA        r8 = Null + -51798;
0x0009DC        E1F0F84F                 call $cbops_multirate.copy;
0x0009DD        FD0000FF 01A031F8        r8 = Null + -52744;
0x0009DF        E1F0FA20                 call $frame_sync.usb_out_mono_copy;

 <$M.audio_copy_handler.irq_sco>
0x0009E0        FD0000FF 01903565        r7 = Null + -51867;
0x0009E2        013005AE                 r1 = Null + 1454;
0x0009E3        015009D4                 r3 = Null + 2516;
0x0009E4        E1F0FA75                 call $sco_timing.SyncClock;
0x0009E5        FD0000FF 01A03565        r8 = Null + -51867;
0x0009E7        E1F0FEAE                 call $frame_sync.task_scheduler_isr;
0x0009E8        DDF0FFB0                 jump $pop_rLink_and_rts;

 <$stream_copy>
0x0009E9        F3D00000                 push rLink;
0x0009EA        D1290000                 r0 = M[r7 + 0];
0x0009EB        E1F0FF98                 call $frmbuffer.get_buffer;
0x0009EC        5000002F                 I0 = Null + r0;
0x0009ED        50C0003F                 L0 = Null + r1;
0x0009EE        00C5000F                 r10 = r3 + Null;
0x0009EF        D1290001                 r0 = M[r7 + 1];
0x0009F0        E1F0FFA6                 call $frmbuffer.set_frame_size;
0x0009F1        E1F0FF92                 call $frmbuffer.get_buffer;
0x0009F2        5040002F                 I4 = Null + r0;
0x0009F3        50E0003F                 L4 = Null + r1;
0x0009F4        F3D40000                 pop rLink;
0x0009F5        03002100                 Null = Null + Null, r0 = M[I0,1];
0x0009F6        E5F00002                 do $M.stream_copy.loop_passthru;
0x0009F7        030021A1                 Null = Null + Null, r0 = M[I0,1], M[I4,1] = r0;

 <$M.stream_copy.loop_passthru>
0x0009F8        51C00000                 L0 = Null + 0;
0x0009F9        51E00000                 L4 = Null + 0;
0x0009FA        DC0D000F                 rts;

 <$persistant_warp_message_handler>
0x0009FB        F3D00000                 push rLink;
0x0009FC        FD0000FF 01A03141        r8 = Null + -52927;
0x0009FE        813300FF                 r1 = r1 AND 0xff;
0x0009FF        D53A000C                 M[r8 + 12] = r1;
0x000A00        8D440008                 r2 = r2 LSHIFT 8;
0x000A01        813500FF                 r1 = r3 AND 0xff;
0x000A02        87430000                 r2 = r2 OR r1;
0x000A03        D54A0005                 M[r8 + 5] = r2;
0x000A04        8D660008                 r4 = r4 LSHIFT 8;
0x000A05        8D350078                 r1 = r3 LSHIFT -8;
0x000A06        813300FF                 r1 = r1 AND 0xff;
0x000A07        87630000                 r4 = r4 OR r1;
0x000A08        D56A000D                 M[r8 + 13] = r4;
0x000A09        2060006F                 r4 = Null - r4;
0x000A0A        D56A000E                 M[r8 + 14] = r4;
0x000A0B        D13A0003                 r1 = M[r8 + 3];
0x000A0C        E1F0F918                 call $cbops.rate_monitor_op.Initialize;
0x000A0D        DDF0FF8B                 jump $pop_rLink_and_rts;

 <$one_mic_example_reinitialize>
0x000A0E        F3D00000                 push rLink;
0x000A0F        FD0000FF 0160337C        r4 = Null + -52356;
0x000A11        E1F0FF36                 call $frame_sync.run_function_table;
0x000A12        FD0000FF 190035D8        M[$one_mic_example.reinit] = Null + Null;
0x000A14        DDF0FF84                 jump $pop_rLink_and_rts;

 <$sco_timing.initialize>
0x000A15        F3D00000                 push rLink;
0x000A16        19A005E4                 M[$M.sco_timing.sco_data_ptr] = r8 + Null;
0x000A17        D50A0016                 M[r8 + 22] = Null;
0x000A18        FD0000FF 013035BB        r1 = Null + -51781;
0x000A1A        FD000000 01408019        r2 = Null + 32793;
0x000A1C        015008A7                 r3 = Null + 2215;
0x000A1D        E1F0003D                 call $message.register_handler;
0x000A1E        013005C2                 r1 = Null + 1474;
0x000A1F        FD000000 01408015        r2 = Null + 32789;
0x000A21        015005ED                 r3 = Null + 1517;
0x000A22        E1F00038                 call $message.register_handler;
0x000A23        FD0000FF 013035BF        r1 = Null + -51777;
0x000A25        FD000000 01408016        r2 = Null + 32790;
0x000A27        015008B6                 r3 = Null + 2230;
0x000A28        E1F00032                 call $message.register_handler;
0x000A29        012006A1                 r0 = Null + 1697;
0x000A2A        192005D9                 M[$cbuffer.write_port_connect_address] = r0 + Null;
0x000A2B        012006B3                 r0 = Null + 1715;
0x000A2C        FD0000FF 192035D9        M[$cbuffer.write_port_disconnect_address] = r0 + Null;
0x000A2E        DDF0FF6A                 jump $pop_rLink_and_rts;

 <$frame_sync.sco_initialize>
0x000A2F        F3D00000                 push rLink;
0x000A30        D509000F                 M[r7 + 15] = Null;
0x000A31        D5090010                 M[r7 + 16] = Null;
0x000A32        D509000D                 M[r7 + 13] = Null;
0x000A33        D1390006                 r1 = M[r7 + 6];
0x000A34        E410002F                 rMAC = Null + 1;
0x000A35        D9030000                 Div = rMAC / r1;
0x000A36        D9300001                 r1 = DivResult;
0x000A37        9133007F                 r1 = r1 ASHIFT -1;
0x000A38        D539000E                 M[r7 + 14] = r1;
0x000A39        D1A90009                 r8 = M[r7 + 9];
0x000A3A        D13A0002                 r1 = M[r8 + 2];
0x000A3B        D1AA0003                 r8 = M[r8 + 3];
0x000A3C        00BA000F                 r9 = r8 + Null;
0x000A3D        E003000F                 call r1;
0x000A3E        D139000B                 r1 = M[r7 + 11];
0x000A3F        DD00FF59                 if EQ jump $pop_rLink_and_rts;
0x000A40        D1990011                 r7 = M[r7 + 17];
0x000A41        E003000F                 call r1;
0x000A42        DDF0FF56                 jump $pop_rLink_and_rts;
...

 <$message.register_handler_with_mask>
0x000A57        8966FFFF                 r4 = r4 XOR 0xffff;
0x000A58        D5630003                 M[r1 + 3] = r4;
0x000A59        DDF00003                 jump $M.message.register_handler.mask_field_set;

 <$message.register_handler>
0x000A5A        8520FFFF                 r0 = Null OR 0xffff;
0x000A5B        D5230003                 M[r1 + 3] = r0;

 <$M.message.register_handler.mask_field_set>
0x000A5C        F3D00000                 push rLink;
0x000A5D        E1F0FF0C                 call $block_interrupts;
0x000A5E        FD0000FF 092035DD        r0 = Null + M[$message.last_addr];
0x000A60        D5230000                 M[r1 + 0] = r0;
0x000A61        FD0000FF 193035DD        M[$message.last_addr] = r1 + Null;
0x000A63        D5430001                 M[r1 + 1] = r2;
0x000A64        D5530002                 M[r1 + 2] = r3;
0x000A65        E1F0FED8                 call $interrupt.unblock;
0x000A66        DDF0FF32                 jump $pop_rLink_and_rts;

 <$pskey.initialise>
0x000A67        F3D00000                 push rLink;
0x000A68        013005B6                 r1 = Null + 1462;
0x000A69        FD000000 01408007        r2 = Null + 32775;
0x000A6B        0150079D                 r3 = Null + 1949;
0x000A6C        E1F0FFEE                 call $message.register_handler;
0x000A6D        FD0000FF 013035B3        r1 = Null + -51789;
0x000A6F        85408008                 r2 = Null OR 0x8008;
0x000A70        0150079D                 r3 = Null + 1949;
0x000A71        E1F0FFE9                 call $message.register_handler;
0x000A72        DDF0FF26                 jump $pop_rLink_and_rts;

 <$wall_clock.initialise>
0x000A73        F3D00000                 push rLink;
0x000A74        FD0000FF 013035B7        r1 = Null + -51785;
0x000A76        8540801C                 r2 = Null OR 0x801c;
0x000A77        01500621                 r3 = Null + 1569;
0x000A78        E1F0FFE2                 call $message.register_handler;
0x000A79        013005BE                 r1 = Null + 1470;
0x000A7A        8540801D                 r2 = Null OR 0x801d;
0x000A7B        0150099A                 r3 = Null + 2458;
0x000A7C        E1F0FFDE                 call $message.register_handler;
0x000A7D        DDF0FF1B                 jump $pop_rLink_and_rts;

 <$interrupt.initialise>
0x000A7E        01200015                 r0 = Null + 21;
0x000A7F        1920FE14                 M[0xfffe14] = r0 + Null;
0x000A80        01200311                 r0 = Null + 785;
0x000A81        1920FE15                 M[0xfffe15] = r0 + Null;
0x000A82        E420002F                 r0 = Null + 1;
0x000A83        1920FE11                 M[0xfffe11] = r0 + Null;
0x000A84        1920FE12                 M[0xfffe12] = r0 + Null;
0x000A85        1920FE13                 M[0xfffe13] = r0 + Null;
0x000A86        1900FE4E                 M[0xfffe4e] = Null + Null;
0x000A87        85EE0080                 rFlags = rFlags OR 0x80;
0x000A88        DC0D000F                 rts;
0x000A89        DDF0F577                 jump $reset;
0x000A8A        DDF0F578                 jump $interrupt.handler;

 <$stack.initialise>
0x000A8B        FD0000FF 01B030BF        r9 = Null + -53057;
0x000A8D        19B0FE67                 M[0xfffe67] = r9 + Null;
0x000A8E        FD0000FF 01B03000        r9 = Null + -53248;
0x000A90        19B0FE66                 M[0xfffe66] = r9 + Null;
0x000A91        19B0FE68                 M[0xfffe68] = r9 + Null;
0x000A92        19B0FE6A                 M[0xfffe6a] = r9 + Null;
0x000A93        E420002F                 r0 = Null + 1;
0x000A94        1920FE9F                 M[0xfffe9f] = r0 + Null;
0x000A95        DC0D000F                 rts;

 <$cbuffer.initialise>
0x000A96        F3D00000                 push rLink;
0x000A97        013005B2                 r1 = Null + 1458;
0x000A98        85408001                 r2 = Null OR 0x8001;
0x000A99        01500576                 r3 = Null + 1398;
0x000A9A        E1F0FFC0                 call $message.register_handler;
0x000A9B        DDF0FEFD                 jump $pop_rLink_and_rts;

 <$error>
0x000A9C        81EEFF7F                 rFlags = rFlags AND 0xff7f;
0x000A9D        FD0000FF 09B035DB        r9 = Null + M[$error.handler];
0x000A9F        DC0B0001                 if NE jump r9;

 <$M.error.error_loop>
0x000AA0        E400001F                 break;
0x000AA1        DDF0FFFF                 jump $M.error.error_loop;

 <$message.initialise>
0x000AA2        0920E000                 r0 = Null + M[0xffe000];
0x000AA3        192005DF                 M[$message.last_seq_sent] = r0 + Null;
0x000AA4        DC0D000F                 rts;

 <$frame_sync.sco_decoder.pcm.initialize>
0x000AA5        DC0D000F                 rts;
========================================================================
datadump
========================================================================

------------------------------------------------------------------------
Region: DM1_REGION
------------------------------------------------------------------------
0x000000	$usb_in_rm.sr_hist_left
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x00000C	$interrupt.start_time
        000000 

0x00000D	$M.system_config.data.snd_process_streams
        00055B 000568 000000 

0x000010	$usb_out_rm.sr_hist_left
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x00001C	$sco_data.buffer_speech
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0x0000FE	$M.system_config.data.snd_pass_thru_obj
        00055B 000568 

0x000100	$usb_out_rm.mem
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x0001F0	$usb_in.mem
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x000200	$sco_data.mem1
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 

0x00031E	$M.system_config.data.rcv_pass_thru_obj
        FF3574 000575 

0x000320	$usb_out.mem
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x00033A	$message.long_message_data
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x000392	$usb_in_rm.copy_op.mtu_next
0x000392	$usb_in_rm.copy_op
        FFFFFF 

0x000393	$usb_in_rm.copy_op.main_next
        FF313E 

0x000394	$usb_in_rm.copy_op.func
        FF35D2 

0x000395	$usb_in_rm.copy_op.param
        000000 000002 000000 FFFFF8 
        000008 FF3180 000078 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0x0003DF	$sco_data.object
        900001 946001 0005D0 FF35CC 
        002000 002000 000000 000000 
        000000 0005A9 00003E 000A43 
        000000 000000 000000 000000 
        000000 000526 94600C FFFFF8 
        0005D3 00001E 000000 000000 
        000000 000000 000000 000078 
        00001E 000000 000000 

0x0003FE	$M.system_config.data.receive_mode_table
        FF3597 000000 

0x000400	$sco_data.mem3
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0x00050E	$cbuffer.read_port_offset_addr
0x00050E	$cbuffer.port_offset_addr
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x00051A	$cbuffer.write_port_offset_addr
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x000526	$sco_data.plc_obj
        00001C 00001C 00058D FF35CC 
        000317 666666 266666 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 

0x000539	$usb_in_rm.sw_copy_op
0x000539	$usb_in_rm.sw_copy_op.mtu_next
        FF313E 

0x00053A	$usb_in_rm.sw_copy_op.main_next
        FFFFFF 

0x00053B	$usb_in_rm.sw_copy_op.func
        FF35CF 

0x00053C	$usb_in_rm.sw_copy_op.param
        000002 000001 000000 000000 
        FF30C0 000000 000000 FF314F 
        000000 000000 000000 000000 
        000000 000000 

0x00054A	$usb_out_rm.sw_copy_op
0x00054A	$usb_out_rm.sw_copy_op.mtu_next
        FFFFFF 

0x00054B	$usb_out_rm.sw_copy_op.main_next
        FF34F0 

0x00054C	$usb_out_rm.sw_copy_op.func
        FF35CF 

0x00054D	$usb_out_rm.sw_copy_op.param
        000000 000002 000000 000000 
        FF30C0 000010 000010 FF314E 
        000000 000000 000000 000000 
        000000 000000 

0x00055B	$M.system_config.data.snd_stream_map_adc
        FF35C6 000000 000000 00003C 
        000010 00095A 000918 000000 
        000000 000000 000000 000000 
        000000 

0x000568	$M.system_config.data.snd_stream_map_sco_out
        0005D3 000000 000000 00003C 
        000000 000925 000880 000000 
        000000 000000 000000 000000 
        000000 

0x000575	$M.system_config.data.rcv_stream_map_dac
        FF35C9 000000 000000 00003C 
        000010 000925 000880 000000 
        000000 000000 000000 000000 
        000000 

0x000582	QCRBNbYNBJjgGLwIldHWLl8sYVMDF/RRfmLZ+vS9Yno=
        7FFFFF 400000 2AAAAB 200000 
        19999A 155555 124925 100000 
        0E38E4 0CCCCD 0BA2E9 

0x00058D	$sco_data.buffer_ola
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0x000597	$usb_in_rm.copy_struc
        FF316E 000392 000539 000001 
        0005CA 000001 FF35C6 000001 
        FF35C3 

0x0005A0	$interrupt.isr_call_table
        0007E7 000A9C 0004AA 000A9C 
        000A9C 000A9C 000A9C 000A9C 
        000A9C 

0x0005A9	$sco_data.sco_decoder
        000990 0008D4 000AA5 000000 
        266666 

0x0005AE	$audio_copy_timer_struc
        000000 000000 000000 000000 

0x0005B2	$cbuffer.configure_port_message_struc
        000000 000000 000000 000000 

0x0005B6	$pskey.result_pass_message_struc
        000000 000000 000000 000000 

0x0005BA	$pskey.reattempt_timer_struc
        000000 000000 000000 000000 

0x0005BE	$wall_clock.message_failed_struc
        000000 000000 000000 000000 

0x0005C2	$M.sco_timing.sco_param.message_struc
        000000 000000 000000 000000 

0x0005C6	$M.frame_sync.usb_in_mono_audio_copy.usb_in_state_fn
        00012E 000141 000141 000169 

0x0005CA	$usb_in.cbuffer_struc
        000010 0001F0 0001F0 

0x0005CD	$usb_out.cbuffer_struc
        000010 000320 000320 

0x0005D0	$sco_data.port_in.cbuffer_struc
        000117 000200 000200 

0x0005D3	$sco_data.port_out.cbuffer_struc
        00010E 000400 000400 

0x0005D6	$cbops.rate_monitor_op
        000000 0002AB 0002B6 

0x0005D9	$cbuffer.write_port_connect_address
        000000 

0x0005DA	$cbuffer.read_port_connect_address
        000000 

0x0005DB	$cbuffer.auto_mcu_message
        000001 000000 

0x0005DD	$interrupt.total_time
        000000 

0x0005DE	$message.queue_read_ptr
        000000 

0x0005DF	$message.last_seq_sent
        000000 

0x0005E0	$pskey.request_in_progress
        000000 

0x0005E1	$timer.id
        000001 

0x0005E2	$wall_clock.last_addr
        FFFFFF 

0x0005E3	$sco_port_data
        000000 

0x0005E4	$M.sco_timing.sco_data_ptr
        000000 

0x0005E5	$M.sco_timing.rcv_proc_trigger
        000000 

0x0005E6	$M.frame_sync.usb_out_mono_copy.ZeroBuf
        000000 


------------------------------------------------------------------------
Region: DM2_REGION
------------------------------------------------------------------------
0xFF3000	$stack.buffer
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF30C0	$sra_coeffs
        77886E 76B443 750EB9 729D5E 
        6F6866 6B7A8E 66E0EC 61AAB9 
        5BE912 55AEB0 4F0F9C 4820DE 
        40F827 39AB7B 3250D9 2AFDE5 
        23C798 1CC1F0 15FFA5 0F91EA 
        098834 03F003 FED4C1 FA3F9E 
        F63781 F2C100 EFDE5A ED8F8D 
        EBD263 EAA293 E9F9EB E9D079 
        EA1CC2 EAD3F9 EBEA40 ED52E4 
        EF00A2 F0E5E4 F2F503 F52088 
        F75B60 F99918 FBCE0A FDEF88 
        FFF403 01D324 0385E3 050696 
        0650F6 076222 083891 08D40B 
        093591 095F45 09544B 0918AB 
        08B129 082324 077469 06AB14 
        05CD5F 04E18A 03EDAC 02F79D 
        0204D5 011A53 003C8C FF6F57 
        FEB5E5 FE12BA FD87A8 FD15D1 
        FCBDB0 FC7F1F FC5965 FC4B43 
        FC5308 FC6EA2 FC9BB4 FCD7A6 
        FD1FBF FD7133 FDC93A FE2522 
        FE825B FEDE87 FF3786 FF8B7B 
        FFD8DA 001E64 005B2E 008E9E 
        00B867 00D889 00EF44 00FD15 
        0102AB 0100DE 00F8A5 00EB0C 
        00D928 00C411 00ACD8 00947E 
        007BEE 0063F8 004D4E 00387E 
        0025F5 0015FD 0008BA FFFE36 
        FFF65B FFF0FA FFEDD3 FFEC94 
        FFECE4 FFEE64 FFF0B3 FFF37A 
        FFF665 FFF92F FFFBA2 FFFD97 
        FFFEF8 FFFFC2 

0xFF313E	$usb_in_rm.sw_rate_op.mtu_next
0xFF313E	$usb_in_rm.sw_rate_op
        000392 

0xFF313F	$usb_in_rm.sw_rate_op.main_next
        000539 

0xFF3140	$usb_in_rm.sw_rate_op.func
        0005D6 

0xFF3141	$usb_in_rm.sw_rate_op.param
        000002 000640 00000A 001F40 
        00000A 400000 00000B 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0xFF3156	$cbuffer.port_buffer_size
0xFF3156	$cbuffer.read_port_buffer_size
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF3162	$cbuffer.write_port_buffer_size
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF316E	$cbops.scratch.BufferTable
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF3180	$cbops.scratch.mem1
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF31F8	$usb_out.copy_struc
        0005CD 80000F FFFFF8 000008 
        000000 

0xFF31FD	$M.system_config.data.rcv_process_streams
        FF3574 000575 000000 

0xFF3200	$sco_data.mem2
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF330E	$message.queue
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF337C	$M.system_config.data.reinitialize_table
        000A2F 0003DF 000000 000000 

0xFF3380	$cbops.scratch.mem2
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF33F8	$persistant_warp_message_struc
        000000 000000 000000 000000 

0xFF33FC	$message.reattempt_timer_struc
        000000 000000 000000 000000 

0xFF3400	$usb_in_rm.mem
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF34F0	$usb_out_rm.copy_op
0xFF34F0	$usb_out_rm.copy_op.mtu_next
        00054A 

0xFF34F1	$usb_out_rm.copy_op.main_next
        FFFFFF 

0xFF34F2	$usb_out_rm.copy_op.func
        FF35D2 

0xFF34F3	$usb_out_rm.copy_op.param
        000002 000001 000000 FFFFF8 
        000008 FF3180 000078 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF353D	$cbuffer.read_port_limit_addr
0xFF353D	$cbuffer.port_limit_addr
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF3549	$cbuffer.write_port_limit_addr
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF3555	$flash.code.address
	-------- [0x000C octets]

0xFF3559	$flash.data16.address
	-------- [0x000C octets]

0xFF355D	$flash.data24.address
	-------- [0x000C octets]

0xFF3561	$flash.windowed_data16.address
	-------- [0x000C octets]

0xFF3565	$M.App.scheduler.tasks
        000000 00000C 000003 000000 
        000000 000000 000000 000000 
        000000 0009C0 00000A 0009B5 
        000000 0009B3 000001 

0xFF3574	$M.system_config.data.rcv_stream_map_sco_in
        FF35CC 000000 000000 00003C 
        000000 00095A 000918 000000 
        000000 000000 000000 000000 
        000000 

0xFF3581	$M.sco_timing.wallclock_obj
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF358D	$M.system_config.data.snd_funcs
        00086C 00000D 000000 0009E9 
        0000FE 000000 0007FF 00000D 
        000000 000000 

0xFF3597	$M.system_config.data.rcv_funcs
        00086C FF31FD 000000 0009E9 
        00031E 000000 0007FF FF31FD 
        000000 000000 

0xFF35A1	$usb_in.copy_struc
        800000 0005CA 000010 000008 
        000000 000000 000000 000000 
        000000 

0xFF35AA	$usb_out_rm.copy_struc
        FF316E 00054A FF34F0 000001 
        FF35C9 000001 0005CD 000001 
        FF35C3 

0xFF35B3	$pskey.result_fail_message_struc
        000000 000000 000000 000000 

0xFF35B7	$wall_clock.message_struc
        000000 000000 000000 000000 

0xFF35BB	$M.sco_timing.bt_addr.message_struc
        000000 000000 000000 000000 

0xFF35BF	$M.sco_timing.sco_param_failed.message_struc
        000000 000000 000000 000000 

0xFF35C3	$cbops.scratch.cbuffer_struc2
        000078 FF3380 FF3380 

0xFF35C6	$usb_in_rm.cbuffer_struc
        0000F0 FF3400 FF3400 

0xFF35C9	$usb_out_rm.cbuffer_struc
        0000F0 000100 000100 

0xFF35CC	$sco_data.sco_in.cbuffer_struc
        00010E FF3200 FF3200 

0xFF35CF	$cbops.rate_adjustment_and_shift
        000000 0008B7 0001A5 

0xFF35D2	$cbops_iir_resamplev2
        000000 00067A 000532 

0xFF35D5	$M.system_config.data.send_mode_table
        FF358D 000000 

0xFF35D7	$one_mic_example.sys_mode
        000000 

0xFF35D8	$one_mic_example.reinit
        000001 

0xFF35D9	$cbuffer.write_port_disconnect_address
        000000 

0xFF35DA	$cbuffer.read_port_disconnect_address
        000000 

0xFF35DB	$error.handler
        000000 

0xFF35DC	$interrupt.block_count
        000000 

0xFF35DD	$message.last_addr
        FFFFFF 

0xFF35DE	$message.queue_write_ptr
        000000 

0xFF35DF	$message.long_message_size
        000000 

0xFF35E0	$pskey.last_addr
        FFFFFF 

0xFF35E1	$timer.last_addr
        FFFFFF 

0xFF35E2	$sco_last_packet_size
        000000 

0xFF35E3	$next_packet_value
        000000 

0xFF35E4	$M.sco_timing.sco_rcv_trigger
        000000 

0xFF35E5	$M.frame_sync.usb_out_mono_copy.last_limit
        FFFFFF 

0xFF35E6	$M.frame_sync.usb_out_mono_copy.delay_buffer_read
        000001 

========================================================================
memusage
========================================================================
DATA:
  DM1_REGION: 1511 of 32768 words used, 31257 words available in 1 blocks
  DM2_REGION: 1511 of 32768 words used, 31257 words available in 1 blocks
TOTAL: 3022 of 65536 words used, 62514 words available in 2 blocks

CODE:
  PM_REGION: 2726 of 11264 words used, 8538 words available in 1 blocks
TOTAL: 2726 of 11264 words used, 8538 words available in 1 blocks

